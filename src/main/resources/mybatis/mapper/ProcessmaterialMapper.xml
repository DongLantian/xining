<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.ProcessmaterialMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Processmaterial">
    <id column="processmaterial_id" jdbcType="INTEGER" property="processmaterialId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dosage" jdbcType="DOUBLE" property="dosage" />
    <result column="unit" jdbcType="CHAR" property="unit" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    processmaterial_id, name, dosage, unit, process_id
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.ProcessmaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from processmaterial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from processmaterial
    where processmaterial_id = #{processmaterialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from processmaterial
    where processmaterial_id = #{processmaterialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.ProcessmaterialExample">
    delete from processmaterial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Processmaterial">
    insert into processmaterial (processmaterial_id, name, dosage, 
      unit, process_id)
    values (#{processmaterialId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{dosage,jdbcType=DOUBLE}, 
      #{unit,jdbcType=CHAR}, #{processId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Processmaterial">
    insert into processmaterial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="processmaterialId != null">
        processmaterial_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dosage != null">
        dosage,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="processId != null">
        process_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="processmaterialId != null">
        #{processmaterialId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dosage != null">
        #{dosage,jdbcType=DOUBLE},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=CHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.ProcessmaterialExample" resultType="java.lang.Long">
    select count(*) from processmaterial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update processmaterial
    <set>
      <if test="record.processmaterialId != null">
        processmaterial_id = #{record.processmaterialId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dosage != null">
        dosage = #{record.dosage,jdbcType=DOUBLE},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=CHAR},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update processmaterial
    set processmaterial_id = #{record.processmaterialId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      dosage = #{record.dosage,jdbcType=DOUBLE},
      unit = #{record.unit,jdbcType=CHAR},
      process_id = #{record.processId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.Processmaterial">
    update processmaterial
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dosage != null">
        dosage = #{dosage,jdbcType=DOUBLE},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=CHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
    </set>
    where processmaterial_id = #{processmaterialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.Processmaterial">
    update processmaterial
    set name = #{name,jdbcType=VARCHAR},
      dosage = #{dosage,jdbcType=DOUBLE},
      unit = #{unit,jdbcType=CHAR},
      process_id = #{processId,jdbcType=INTEGER}
    where processmaterial_id = #{processmaterialId,jdbcType=INTEGER}
  </update>
</mapper>