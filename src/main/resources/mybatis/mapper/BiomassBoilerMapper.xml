<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.BiomassBoilerMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.BiomassBoiler">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scc_code" jdbcType="CHAR" property="sccCode" />
    <result column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="source_descrip" jdbcType="VARCHAR" property="sourceDescrip" />
    <result column="boiler_no" jdbcType="INTEGER" property="boilerNo" />
    <result column="fuel_type" jdbcType="CHAR" property="fuelType" />
    <result column="fuel_consumption" jdbcType="DOUBLE" property="fuelConsumption" />
    <result column="dust_remove_tech" jdbcType="CHAR" property="dustRemoveTech" />
    <result column="pm10_remove_ratio" jdbcType="DOUBLE" property="pm10RemoveRatio" />
    <result column="pm25_remove_ratio" jdbcType="DOUBLE" property="pm25RemoveRatio" />
    <result column="DESULPHUR_REMOVE_TECH" jdbcType="CHAR" property="desulphurRemoveTech" />
    <result column="SO2_REMOVE_RATIO" jdbcType="DOUBLE" property="so2RemoveRatio" />
    <result column="DENITRIFIC_REMOVE_TECH" jdbcType="CHAR" property="denitrificRemoveTech" />
    <result column="NOX_REMOVE_RATIO" jdbcType="DOUBLE" property="noxRemoveRatio" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="pm10_emission" jdbcType="DOUBLE" property="pm10Emission" />
    <result column="pm25_emission" jdbcType="DOUBLE" property="pm25Emission" />
    <result column="co_emission" jdbcType="DOUBLE" property="coEmission" />
    <result column="voc_emission" jdbcType="DOUBLE" property="vocEmission" />
    <result column="pm_emission" jdbcType="DOUBLE" property="pmEmission" />
    <result column="so2_emission" jdbcType="DOUBLE" property="so2Emission" />
    <result column="nox_emission" jdbcType="DOUBLE" property="noxEmission" />
    <result column="nh3_emission" jdbcType="DOUBLE" property="nh3Emission" />
    <result column="oc_emission" jdbcType="DOUBLE" property="ocEmission" />
    <result column="bc_emission" jdbcType="DOUBLE" property="bcEmission" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scc_code, com_id, source_descrip, boiler_no, fuel_type, fuel_consumption, dust_remove_tech, 
    pm10_remove_ratio, pm25_remove_ratio, DESULPHUR_REMOVE_TECH, SO2_REMOVE_RATIO, DENITRIFIC_REMOVE_TECH, 
    NOX_REMOVE_RATIO, note, year, pm10_emission, pm25_emission, co_emission, voc_emission, 
    pm_emission, so2_emission, nox_emission, nh3_emission, oc_emission, bc_emission
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.BiomassBoilerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biomass_boiler
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biomass_boiler
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biomass_boiler
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.BiomassBoilerExample">
    delete from biomass_boiler
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.BiomassBoiler">
    insert into biomass_boiler (id, scc_code, com_id, 
      source_descrip, boiler_no, fuel_type, 
      fuel_consumption, dust_remove_tech, pm10_remove_ratio, 
      pm25_remove_ratio, DESULPHUR_REMOVE_TECH, SO2_REMOVE_RATIO, 
      DENITRIFIC_REMOVE_TECH, NOX_REMOVE_RATIO, note, 
      year, pm10_emission, pm25_emission, 
      co_emission, voc_emission, pm_emission, 
      so2_emission, nox_emission, nh3_emission, 
      oc_emission, bc_emission)
    values (#{id,jdbcType=INTEGER}, #{sccCode,jdbcType=CHAR}, #{comId,jdbcType=INTEGER}, 
      #{sourceDescrip,jdbcType=VARCHAR}, #{boilerNo,jdbcType=INTEGER}, #{fuelType,jdbcType=CHAR}, 
      #{fuelConsumption,jdbcType=DOUBLE}, #{dustRemoveTech,jdbcType=CHAR}, #{pm10RemoveRatio,jdbcType=DOUBLE}, 
      #{pm25RemoveRatio,jdbcType=DOUBLE}, #{desulphurRemoveTech,jdbcType=CHAR}, #{so2RemoveRatio,jdbcType=DOUBLE}, 
      #{denitrificRemoveTech,jdbcType=CHAR}, #{noxRemoveRatio,jdbcType=DOUBLE}, #{note,jdbcType=VARCHAR}, 
      #{year,jdbcType=CHAR}, #{pm10Emission,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE}, 
      #{coEmission,jdbcType=DOUBLE}, #{vocEmission,jdbcType=DOUBLE}, #{pmEmission,jdbcType=DOUBLE}, 
      #{so2Emission,jdbcType=DOUBLE}, #{noxEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, 
      #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.BiomassBoiler">
    insert into biomass_boiler
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sccCode != null">
        scc_code,
      </if>
      <if test="comId != null">
        com_id,
      </if>
      <if test="sourceDescrip != null">
        source_descrip,
      </if>
      <if test="boilerNo != null">
        boiler_no,
      </if>
      <if test="fuelType != null">
        fuel_type,
      </if>
      <if test="fuelConsumption != null">
        fuel_consumption,
      </if>
      <if test="dustRemoveTech != null">
        dust_remove_tech,
      </if>
      <if test="pm10RemoveRatio != null">
        pm10_remove_ratio,
      </if>
      <if test="pm25RemoveRatio != null">
        pm25_remove_ratio,
      </if>
      <if test="desulphurRemoveTech != null">
        DESULPHUR_REMOVE_TECH,
      </if>
      <if test="so2RemoveRatio != null">
        SO2_REMOVE_RATIO,
      </if>
      <if test="denitrificRemoveTech != null">
        DENITRIFIC_REMOVE_TECH,
      </if>
      <if test="noxRemoveRatio != null">
        NOX_REMOVE_RATIO,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="pm10Emission != null">
        pm10_emission,
      </if>
      <if test="pm25Emission != null">
        pm25_emission,
      </if>
      <if test="coEmission != null">
        co_emission,
      </if>
      <if test="vocEmission != null">
        voc_emission,
      </if>
      <if test="pmEmission != null">
        pm_emission,
      </if>
      <if test="so2Emission != null">
        so2_emission,
      </if>
      <if test="noxEmission != null">
        nox_emission,
      </if>
      <if test="nh3Emission != null">
        nh3_emission,
      </if>
      <if test="ocEmission != null">
        oc_emission,
      </if>
      <if test="bcEmission != null">
        bc_emission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sccCode != null">
        #{sccCode,jdbcType=CHAR},
      </if>
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="sourceDescrip != null">
        #{sourceDescrip,jdbcType=VARCHAR},
      </if>
      <if test="boilerNo != null">
        #{boilerNo,jdbcType=INTEGER},
      </if>
      <if test="fuelType != null">
        #{fuelType,jdbcType=CHAR},
      </if>
      <if test="fuelConsumption != null">
        #{fuelConsumption,jdbcType=DOUBLE},
      </if>
      <if test="dustRemoveTech != null">
        #{dustRemoveTech,jdbcType=CHAR},
      </if>
      <if test="pm10RemoveRatio != null">
        #{pm10RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="pm25RemoveRatio != null">
        #{pm25RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="desulphurRemoveTech != null">
        #{desulphurRemoveTech,jdbcType=CHAR},
      </if>
      <if test="so2RemoveRatio != null">
        #{so2RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="denitrificRemoveTech != null">
        #{denitrificRemoveTech,jdbcType=CHAR},
      </if>
      <if test="noxRemoveRatio != null">
        #{noxRemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="pm10Emission != null">
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null">
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="pmEmission != null">
        #{pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        #{bcEmission,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.BiomassBoilerExample" resultType="java.lang.Long">
    select count(*) from biomass_boiler
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biomass_boiler
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sccCode != null">
        scc_code = #{record.sccCode,jdbcType=CHAR},
      </if>
      <if test="record.comId != null">
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceDescrip != null">
        source_descrip = #{record.sourceDescrip,jdbcType=VARCHAR},
      </if>
      <if test="record.boilerNo != null">
        boiler_no = #{record.boilerNo,jdbcType=INTEGER},
      </if>
      <if test="record.fuelType != null">
        fuel_type = #{record.fuelType,jdbcType=CHAR},
      </if>
      <if test="record.fuelConsumption != null">
        fuel_consumption = #{record.fuelConsumption,jdbcType=DOUBLE},
      </if>
      <if test="record.dustRemoveTech != null">
        dust_remove_tech = #{record.dustRemoveTech,jdbcType=CHAR},
      </if>
      <if test="record.pm10RemoveRatio != null">
        pm10_remove_ratio = #{record.pm10RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25RemoveRatio != null">
        pm25_remove_ratio = #{record.pm25RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.desulphurRemoveTech != null">
        DESULPHUR_REMOVE_TECH = #{record.desulphurRemoveTech,jdbcType=CHAR},
      </if>
      <if test="record.so2RemoveRatio != null">
        SO2_REMOVE_RATIO = #{record.so2RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.denitrificRemoveTech != null">
        DENITRIFIC_REMOVE_TECH = #{record.denitrificRemoveTech,jdbcType=CHAR},
      </if>
      <if test="record.noxRemoveRatio != null">
        NOX_REMOVE_RATIO = #{record.noxRemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.pm10Emission != null">
        pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25Emission != null">
        pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.coEmission != null">
        co_emission = #{record.coEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.vocEmission != null">
        voc_emission = #{record.vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.pmEmission != null">
        pm_emission = #{record.pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.so2Emission != null">
        so2_emission = #{record.so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.noxEmission != null">
        nox_emission = #{record.noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3Emission != null">
        nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.ocEmission != null">
        oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.bcEmission != null">
        bc_emission = #{record.bcEmission,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biomass_boiler
    set id = #{record.id,jdbcType=INTEGER},
      scc_code = #{record.sccCode,jdbcType=CHAR},
      com_id = #{record.comId,jdbcType=INTEGER},
      source_descrip = #{record.sourceDescrip,jdbcType=VARCHAR},
      boiler_no = #{record.boilerNo,jdbcType=INTEGER},
      fuel_type = #{record.fuelType,jdbcType=CHAR},
      fuel_consumption = #{record.fuelConsumption,jdbcType=DOUBLE},
      dust_remove_tech = #{record.dustRemoveTech,jdbcType=CHAR},
      pm10_remove_ratio = #{record.pm10RemoveRatio,jdbcType=DOUBLE},
      pm25_remove_ratio = #{record.pm25RemoveRatio,jdbcType=DOUBLE},
      DESULPHUR_REMOVE_TECH = #{record.desulphurRemoveTech,jdbcType=CHAR},
      SO2_REMOVE_RATIO = #{record.so2RemoveRatio,jdbcType=DOUBLE},
      DENITRIFIC_REMOVE_TECH = #{record.denitrificRemoveTech,jdbcType=CHAR},
      NOX_REMOVE_RATIO = #{record.noxRemoveRatio,jdbcType=DOUBLE},
      note = #{record.note,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=CHAR},
      pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      co_emission = #{record.coEmission,jdbcType=DOUBLE},
      voc_emission = #{record.vocEmission,jdbcType=DOUBLE},
      pm_emission = #{record.pmEmission,jdbcType=DOUBLE},
      so2_emission = #{record.so2Emission,jdbcType=DOUBLE},
      nox_emission = #{record.noxEmission,jdbcType=DOUBLE},
      nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      bc_emission = #{record.bcEmission,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.BiomassBoiler">
    update biomass_boiler
    <set>
      <if test="sccCode != null">
        scc_code = #{sccCode,jdbcType=CHAR},
      </if>
      <if test="comId != null">
        com_id = #{comId,jdbcType=INTEGER},
      </if>
      <if test="sourceDescrip != null">
        source_descrip = #{sourceDescrip,jdbcType=VARCHAR},
      </if>
      <if test="boilerNo != null">
        boiler_no = #{boilerNo,jdbcType=INTEGER},
      </if>
      <if test="fuelType != null">
        fuel_type = #{fuelType,jdbcType=CHAR},
      </if>
      <if test="fuelConsumption != null">
        fuel_consumption = #{fuelConsumption,jdbcType=DOUBLE},
      </if>
      <if test="dustRemoveTech != null">
        dust_remove_tech = #{dustRemoveTech,jdbcType=CHAR},
      </if>
      <if test="pm10RemoveRatio != null">
        pm10_remove_ratio = #{pm10RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="pm25RemoveRatio != null">
        pm25_remove_ratio = #{pm25RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="desulphurRemoveTech != null">
        DESULPHUR_REMOVE_TECH = #{desulphurRemoveTech,jdbcType=CHAR},
      </if>
      <if test="so2RemoveRatio != null">
        SO2_REMOVE_RATIO = #{so2RemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="denitrificRemoveTech != null">
        DENITRIFIC_REMOVE_TECH = #{denitrificRemoveTech,jdbcType=CHAR},
      </if>
      <if test="noxRemoveRatio != null">
        NOX_REMOVE_RATIO = #{noxRemoveRatio,jdbcType=DOUBLE},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="pm10Emission != null">
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null">
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="pmEmission != null">
        pm_emission = #{pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.BiomassBoiler">
    update biomass_boiler
    set scc_code = #{sccCode,jdbcType=CHAR},
      com_id = #{comId,jdbcType=INTEGER},
      source_descrip = #{sourceDescrip,jdbcType=VARCHAR},
      boiler_no = #{boilerNo,jdbcType=INTEGER},
      fuel_type = #{fuelType,jdbcType=CHAR},
      fuel_consumption = #{fuelConsumption,jdbcType=DOUBLE},
      dust_remove_tech = #{dustRemoveTech,jdbcType=CHAR},
      pm10_remove_ratio = #{pm10RemoveRatio,jdbcType=DOUBLE},
      pm25_remove_ratio = #{pm25RemoveRatio,jdbcType=DOUBLE},
      DESULPHUR_REMOVE_TECH = #{desulphurRemoveTech,jdbcType=CHAR},
      SO2_REMOVE_RATIO = #{so2RemoveRatio,jdbcType=DOUBLE},
      DENITRIFIC_REMOVE_TECH = #{denitrificRemoveTech,jdbcType=CHAR},
      NOX_REMOVE_RATIO = #{noxRemoveRatio,jdbcType=DOUBLE},
      note = #{note,jdbcType=VARCHAR},
      year = #{year,jdbcType=CHAR},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      pm_emission = #{pmEmission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>