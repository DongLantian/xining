<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.MytempMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Mytemp">
    <result column="source_type" jdbcType="CHAR" property="sourceType" />
    <result column="MODEL" jdbcType="CHAR" property="model" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="county_Id" jdbcType="CHAR" property="countyId" />
    <result column="factory_name" jdbcType="CHAR" property="factoryName" />
    <result column="factory_no1" jdbcType="CHAR" property="factoryNo1" />
    <result column="industry_id" jdbcType="CHAR" property="industryId" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="factory_longitude" jdbcType="DOUBLE" property="factoryLongitude" />
    <result column="factory_latitude" jdbcType="DOUBLE" property="factoryLatitude" />
    <result column="TBOILER_NUM" jdbcType="INTEGER" property="tboilerNum" />
    <result column="TBOILER_TONS" jdbcType="DOUBLE" property="tboilerTons" />
    <result column="NO" jdbcType="INTEGER" property="no" />
    <result column="TONS" jdbcType="DOUBLE" property="tons" />
    <result column="scc" jdbcType="CHAR" property="scc" />
    <result column="FUELTYPE" jdbcType="CHAR" property="fueltype" />
    <result column="FUEL_AUSAGE" jdbcType="DOUBLE" property="fuelAusage" />
    <result column="EXF_NO" jdbcType="CHAR" property="exfNo" />
    <result column="EXF_HEIGHT" jdbcType="DOUBLE" property="exfHeight" />
    <result column="SMOKE_OUTD" jdbcType="DOUBLE" property="smokeOutd" />
    <result column="SMOKE_O_UTTE_M" jdbcType="DOUBLE" property="smokeOUtteM" />
    <result column="SMOKE_OUTV" jdbcType="DOUBLE" property="smokeOutv" />
    <result column="EXF_MATERIAL" jdbcType="CHAR" property="exfMaterial" />
    <result column="pm" jdbcType="DOUBLE" property="pm" />
    <result column="pm10" jdbcType="DOUBLE" property="pm10" />
    <result column="pm25" jdbcType="DOUBLE" property="pm25" />
    <result column="voc" jdbcType="DOUBLE" property="voc" />
    <result column="co" jdbcType="DOUBLE" property="co" />
    <result column="nh3" jdbcType="DOUBLE" property="nh3" />
    <result column="so2" jdbcType="DOUBLE" property="so2" />
    <result column="nox" jdbcType="DOUBLE" property="nox" />
    <result column="oc" jdbcType="DOUBLE" property="oc" />
    <result column="bc" jdbcType="DOUBLE" property="bc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    source_type, MODEL, year, county_Id, factory_name, factory_no1, industry_id, address, 
    factory_longitude, factory_latitude, TBOILER_NUM, TBOILER_TONS, NO, TONS, scc, FUELTYPE, 
    FUEL_AUSAGE, EXF_NO, EXF_HEIGHT, SMOKE_OUTD, SMOKE_O_UTTE_M, SMOKE_OUTV, EXF_MATERIAL, 
    pm, pm10, pm25, voc, co, nh3, so2, nox, oc, bc
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.MytempExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mytemp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.MytempExample">
    delete from mytemp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Mytemp">
    insert into mytemp (source_type, MODEL, year, 
      county_Id, factory_name, factory_no1, 
      industry_id, address, factory_longitude, 
      factory_latitude, TBOILER_NUM, TBOILER_TONS, 
      NO, TONS, scc, FUELTYPE, 
      FUEL_AUSAGE, EXF_NO, EXF_HEIGHT, 
      SMOKE_OUTD, SMOKE_O_UTTE_M, SMOKE_OUTV, 
      EXF_MATERIAL, pm, pm10, pm25, 
      voc, co, nh3, so2, 
      nox, oc, bc)
    values (#{sourceType,jdbcType=CHAR}, #{model,jdbcType=CHAR}, #{year,jdbcType=CHAR}, 
      #{countyId,jdbcType=CHAR}, #{factoryName,jdbcType=CHAR}, #{factoryNo1,jdbcType=CHAR}, 
      #{industryId,jdbcType=CHAR}, #{address,jdbcType=CHAR}, #{factoryLongitude,jdbcType=DOUBLE}, 
      #{factoryLatitude,jdbcType=DOUBLE}, #{tboilerNum,jdbcType=INTEGER}, #{tboilerTons,jdbcType=DOUBLE}, 
      #{no,jdbcType=INTEGER}, #{tons,jdbcType=DOUBLE}, #{scc,jdbcType=CHAR}, #{fueltype,jdbcType=CHAR}, 
      #{fuelAusage,jdbcType=DOUBLE}, #{exfNo,jdbcType=CHAR}, #{exfHeight,jdbcType=DOUBLE}, 
      #{smokeOutd,jdbcType=DOUBLE}, #{smokeOUtteM,jdbcType=DOUBLE}, #{smokeOutv,jdbcType=DOUBLE}, 
      #{exfMaterial,jdbcType=CHAR}, #{pm,jdbcType=DOUBLE}, #{pm10,jdbcType=DOUBLE}, #{pm25,jdbcType=DOUBLE}, 
      #{voc,jdbcType=DOUBLE}, #{co,jdbcType=DOUBLE}, #{nh3,jdbcType=DOUBLE}, #{so2,jdbcType=DOUBLE}, 
      #{nox,jdbcType=DOUBLE}, #{oc,jdbcType=DOUBLE}, #{bc,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Mytemp">
    insert into mytemp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="model != null">
        MODEL,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="countyId != null">
        county_Id,
      </if>
      <if test="factoryName != null">
        factory_name,
      </if>
      <if test="factoryNo1 != null">
        factory_no1,
      </if>
      <if test="industryId != null">
        industry_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="factoryLongitude != null">
        factory_longitude,
      </if>
      <if test="factoryLatitude != null">
        factory_latitude,
      </if>
      <if test="tboilerNum != null">
        TBOILER_NUM,
      </if>
      <if test="tboilerTons != null">
        TBOILER_TONS,
      </if>
      <if test="no != null">
        NO,
      </if>
      <if test="tons != null">
        TONS,
      </if>
      <if test="scc != null">
        scc,
      </if>
      <if test="fueltype != null">
        FUELTYPE,
      </if>
      <if test="fuelAusage != null">
        FUEL_AUSAGE,
      </if>
      <if test="exfNo != null">
        EXF_NO,
      </if>
      <if test="exfHeight != null">
        EXF_HEIGHT,
      </if>
      <if test="smokeOutd != null">
        SMOKE_OUTD,
      </if>
      <if test="smokeOUtteM != null">
        SMOKE_O_UTTE_M,
      </if>
      <if test="smokeOutv != null">
        SMOKE_OUTV,
      </if>
      <if test="exfMaterial != null">
        EXF_MATERIAL,
      </if>
      <if test="pm != null">
        pm,
      </if>
      <if test="pm10 != null">
        pm10,
      </if>
      <if test="pm25 != null">
        pm25,
      </if>
      <if test="voc != null">
        voc,
      </if>
      <if test="co != null">
        co,
      </if>
      <if test="nh3 != null">
        nh3,
      </if>
      <if test="so2 != null">
        so2,
      </if>
      <if test="nox != null">
        nox,
      </if>
      <if test="oc != null">
        oc,
      </if>
      <if test="bc != null">
        bc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sourceType != null">
        #{sourceType,jdbcType=CHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=CHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="countyId != null">
        #{countyId,jdbcType=CHAR},
      </if>
      <if test="factoryName != null">
        #{factoryName,jdbcType=CHAR},
      </if>
      <if test="factoryNo1 != null">
        #{factoryNo1,jdbcType=CHAR},
      </if>
      <if test="industryId != null">
        #{industryId,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="factoryLongitude != null">
        #{factoryLongitude,jdbcType=DOUBLE},
      </if>
      <if test="factoryLatitude != null">
        #{factoryLatitude,jdbcType=DOUBLE},
      </if>
      <if test="tboilerNum != null">
        #{tboilerNum,jdbcType=INTEGER},
      </if>
      <if test="tboilerTons != null">
        #{tboilerTons,jdbcType=DOUBLE},
      </if>
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="tons != null">
        #{tons,jdbcType=DOUBLE},
      </if>
      <if test="scc != null">
        #{scc,jdbcType=CHAR},
      </if>
      <if test="fueltype != null">
        #{fueltype,jdbcType=CHAR},
      </if>
      <if test="fuelAusage != null">
        #{fuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="exfNo != null">
        #{exfNo,jdbcType=CHAR},
      </if>
      <if test="exfHeight != null">
        #{exfHeight,jdbcType=DOUBLE},
      </if>
      <if test="smokeOutd != null">
        #{smokeOutd,jdbcType=DOUBLE},
      </if>
      <if test="smokeOUtteM != null">
        #{smokeOUtteM,jdbcType=DOUBLE},
      </if>
      <if test="smokeOutv != null">
        #{smokeOutv,jdbcType=DOUBLE},
      </if>
      <if test="exfMaterial != null">
        #{exfMaterial,jdbcType=CHAR},
      </if>
      <if test="pm != null">
        #{pm,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="voc != null">
        #{voc,jdbcType=DOUBLE},
      </if>
      <if test="co != null">
        #{co,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        #{nox,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        #{oc,jdbcType=DOUBLE},
      </if>
      <if test="bc != null">
        #{bc,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.MytempExample" resultType="java.lang.Long">
    select count(*) from mytemp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mytemp
    <set>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=CHAR},
      </if>
      <if test="record.model != null">
        MODEL = #{record.model,jdbcType=CHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.countyId != null">
        county_Id = #{record.countyId,jdbcType=CHAR},
      </if>
      <if test="record.factoryName != null">
        factory_name = #{record.factoryName,jdbcType=CHAR},
      </if>
      <if test="record.factoryNo1 != null">
        factory_no1 = #{record.factoryNo1,jdbcType=CHAR},
      </if>
      <if test="record.industryId != null">
        industry_id = #{record.industryId,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=CHAR},
      </if>
      <if test="record.factoryLongitude != null">
        factory_longitude = #{record.factoryLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.factoryLatitude != null">
        factory_latitude = #{record.factoryLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.tboilerNum != null">
        TBOILER_NUM = #{record.tboilerNum,jdbcType=INTEGER},
      </if>
      <if test="record.tboilerTons != null">
        TBOILER_TONS = #{record.tboilerTons,jdbcType=DOUBLE},
      </if>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.tons != null">
        TONS = #{record.tons,jdbcType=DOUBLE},
      </if>
      <if test="record.scc != null">
        scc = #{record.scc,jdbcType=CHAR},
      </if>
      <if test="record.fueltype != null">
        FUELTYPE = #{record.fueltype,jdbcType=CHAR},
      </if>
      <if test="record.fuelAusage != null">
        FUEL_AUSAGE = #{record.fuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="record.exfNo != null">
        EXF_NO = #{record.exfNo,jdbcType=CHAR},
      </if>
      <if test="record.exfHeight != null">
        EXF_HEIGHT = #{record.exfHeight,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOutd != null">
        SMOKE_OUTD = #{record.smokeOutd,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOUtteM != null">
        SMOKE_O_UTTE_M = #{record.smokeOUtteM,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOutv != null">
        SMOKE_OUTV = #{record.smokeOutv,jdbcType=DOUBLE},
      </if>
      <if test="record.exfMaterial != null">
        EXF_MATERIAL = #{record.exfMaterial,jdbcType=CHAR},
      </if>
      <if test="record.pm != null">
        pm = #{record.pm,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10 != null">
        pm10 = #{record.pm10,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25 != null">
        pm25 = #{record.pm25,jdbcType=DOUBLE},
      </if>
      <if test="record.voc != null">
        voc = #{record.voc,jdbcType=DOUBLE},
      </if>
      <if test="record.co != null">
        co = #{record.co,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3 != null">
        nh3 = #{record.nh3,jdbcType=DOUBLE},
      </if>
      <if test="record.so2 != null">
        so2 = #{record.so2,jdbcType=DOUBLE},
      </if>
      <if test="record.nox != null">
        nox = #{record.nox,jdbcType=DOUBLE},
      </if>
      <if test="record.oc != null">
        oc = #{record.oc,jdbcType=DOUBLE},
      </if>
      <if test="record.bc != null">
        bc = #{record.bc,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mytemp
    set source_type = #{record.sourceType,jdbcType=CHAR},
      MODEL = #{record.model,jdbcType=CHAR},
      year = #{record.year,jdbcType=CHAR},
      county_Id = #{record.countyId,jdbcType=CHAR},
      factory_name = #{record.factoryName,jdbcType=CHAR},
      factory_no1 = #{record.factoryNo1,jdbcType=CHAR},
      industry_id = #{record.industryId,jdbcType=CHAR},
      address = #{record.address,jdbcType=CHAR},
      factory_longitude = #{record.factoryLongitude,jdbcType=DOUBLE},
      factory_latitude = #{record.factoryLatitude,jdbcType=DOUBLE},
      TBOILER_NUM = #{record.tboilerNum,jdbcType=INTEGER},
      TBOILER_TONS = #{record.tboilerTons,jdbcType=DOUBLE},
      NO = #{record.no,jdbcType=INTEGER},
      TONS = #{record.tons,jdbcType=DOUBLE},
      scc = #{record.scc,jdbcType=CHAR},
      FUELTYPE = #{record.fueltype,jdbcType=CHAR},
      FUEL_AUSAGE = #{record.fuelAusage,jdbcType=DOUBLE},
      EXF_NO = #{record.exfNo,jdbcType=CHAR},
      EXF_HEIGHT = #{record.exfHeight,jdbcType=DOUBLE},
      SMOKE_OUTD = #{record.smokeOutd,jdbcType=DOUBLE},
      SMOKE_O_UTTE_M = #{record.smokeOUtteM,jdbcType=DOUBLE},
      SMOKE_OUTV = #{record.smokeOutv,jdbcType=DOUBLE},
      EXF_MATERIAL = #{record.exfMaterial,jdbcType=CHAR},
      pm = #{record.pm,jdbcType=DOUBLE},
      pm10 = #{record.pm10,jdbcType=DOUBLE},
      pm25 = #{record.pm25,jdbcType=DOUBLE},
      voc = #{record.voc,jdbcType=DOUBLE},
      co = #{record.co,jdbcType=DOUBLE},
      nh3 = #{record.nh3,jdbcType=DOUBLE},
      so2 = #{record.so2,jdbcType=DOUBLE},
      nox = #{record.nox,jdbcType=DOUBLE},
      oc = #{record.oc,jdbcType=DOUBLE},
      bc = #{record.bc,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>