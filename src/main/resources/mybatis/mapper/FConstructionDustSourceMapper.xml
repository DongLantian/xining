<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.FConstructionDustSourceMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.FConstructionDustSource">
    <id column="construct_dustid" jdbcType="INTEGER" property="constructDustid" />
    <result column="scccode" jdbcType="CHAR" property="scccode" />
    <result column="factoryid" jdbcType="INTEGER" property="factoryid" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="Company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="construct_state" jdbcType="VARCHAR" property="constructState" />
    <result column="construct_area" jdbcType="DOUBLE" property="constructArea" />
    <result column="construct_months" jdbcType="VARCHAR" property="constructMonths" />
    <result column="control_measures" jdbcType="VARCHAR" property="controlMeasures" />
    <result column="finisharea" jdbcType="DOUBLE" property="finisharea" />
    <result column="nowkgarea" jdbcType="DOUBLE" property="nowkgarea" />
    <result column="startdate" jdbcType="DATE" property="startdate" />
    <result column="pm25_factors" jdbcType="DOUBLE" property="pm25Factors" />
    <result column="pm10_factors" jdbcType="DOUBLE" property="pm10Factors" />
    <result column="oc_factors" jdbcType="DOUBLE" property="ocFactors" />
    <result column="bc_factors" jdbcType="DOUBLE" property="bcFactors" />
    <result column="pm10_emission" jdbcType="DOUBLE" property="pm10Emission" />
    <result column="pm25_emission" jdbcType="DOUBLE" property="pm25Emission" />
    <result column="oc_emission" jdbcType="DOUBLE" property="ocEmission" />
    <result column="bc_emission" jdbcType="DOUBLE" property="bcEmission" />
    <result column="LONGITUDE1" jdbcType="DOUBLE" property="longitude1" />
    <result column="LATITUDE1" jdbcType="DOUBLE" property="latitude1" />
    <result column="LONGITUDE2" jdbcType="DOUBLE" property="longitude2" />
    <result column="LATITUDE2" jdbcType="DOUBLE" property="latitude2" />
    <result column="LONGITUDE3" jdbcType="DOUBLE" property="longitude3" />
    <result column="LATITUDE3" jdbcType="DOUBLE" property="latitude3" />
    <result column="LONGITUDE4" jdbcType="DOUBLE" property="longitude4" />
    <result column="LATITUDE4" jdbcType="DOUBLE" property="latitude4" />
    <result column="construction_type" jdbcType="VARCHAR" property="constructionType" />
    <result column="finishdate" jdbcType="DATE" property="finishdate" />
    <result column="shenhe_status" jdbcType="VARCHAR" property="shenheStatus" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    construct_dustid, scccode, factoryid, year, Company_name, construct_state, construct_area, 
    construct_months, control_measures, finisharea, nowkgarea, startdate, pm25_factors, 
    pm10_factors, oc_factors, bc_factors, pm10_emission, pm25_emission, oc_emission, 
    bc_emission, LONGITUDE1, LATITUDE1, LONGITUDE2, LATITUDE2, LONGITUDE3, LATITUDE3, 
    LONGITUDE4, LATITUDE4, construction_type, finishdate, shenhe_status, note
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.FConstructionDustSourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_construction_dust_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from f_construction_dust_source
    where construct_dustid = #{constructDustid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from f_construction_dust_source
    where construct_dustid = #{constructDustid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.FConstructionDustSourceExample">
    delete from f_construction_dust_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.FConstructionDustSource">
    insert into f_construction_dust_source (construct_dustid, scccode, factoryid, 
      year, Company_name, construct_state, 
      construct_area, construct_months, control_measures, 
      finisharea, nowkgarea, startdate, 
      pm25_factors, pm10_factors, oc_factors, 
      bc_factors, pm10_emission, pm25_emission, 
      oc_emission, bc_emission, LONGITUDE1, 
      LATITUDE1, LONGITUDE2, LATITUDE2, 
      LONGITUDE3, LATITUDE3, LONGITUDE4, 
      LATITUDE4, construction_type, finishdate, 
      shenhe_status, note)
    values (#{constructDustid,jdbcType=INTEGER}, #{scccode,jdbcType=CHAR}, #{factoryid,jdbcType=INTEGER}, 
      #{year,jdbcType=CHAR}, #{companyName,jdbcType=VARCHAR}, #{constructState,jdbcType=VARCHAR}, 
      #{constructArea,jdbcType=DOUBLE}, #{constructMonths,jdbcType=VARCHAR}, #{controlMeasures,jdbcType=VARCHAR}, 
      #{finisharea,jdbcType=DOUBLE}, #{nowkgarea,jdbcType=DOUBLE}, #{startdate,jdbcType=DATE}, 
      #{pm25Factors,jdbcType=DOUBLE}, #{pm10Factors,jdbcType=DOUBLE}, #{ocFactors,jdbcType=DOUBLE}, 
      #{bcFactors,jdbcType=DOUBLE}, #{pm10Emission,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE}, 
      #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE}, #{longitude1,jdbcType=DOUBLE}, 
      #{latitude1,jdbcType=DOUBLE}, #{longitude2,jdbcType=DOUBLE}, #{latitude2,jdbcType=DOUBLE}, 
      #{longitude3,jdbcType=DOUBLE}, #{latitude3,jdbcType=DOUBLE}, #{longitude4,jdbcType=DOUBLE}, 
      #{latitude4,jdbcType=DOUBLE}, #{constructionType,jdbcType=VARCHAR}, #{finishdate,jdbcType=DATE}, 
      #{shenheStatus,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.FConstructionDustSource">
    insert into f_construction_dust_source
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="constructDustid != null">
        construct_dustid,
      </if>
      <if test="scccode != null">
        scccode,
      </if>
      <if test="factoryid != null">
        factoryid,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="companyName != null">
        Company_name,
      </if>
      <if test="constructState != null">
        construct_state,
      </if>
      <if test="constructArea != null">
        construct_area,
      </if>
      <if test="constructMonths != null">
        construct_months,
      </if>
      <if test="controlMeasures != null">
        control_measures,
      </if>
      <if test="finisharea != null">
        finisharea,
      </if>
      <if test="nowkgarea != null">
        nowkgarea,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="pm25Factors != null">
        pm25_factors,
      </if>
      <if test="pm10Factors != null">
        pm10_factors,
      </if>
      <if test="ocFactors != null">
        oc_factors,
      </if>
      <if test="bcFactors != null">
        bc_factors,
      </if>
      <if test="pm10Emission != null">
        pm10_emission,
      </if>
      <if test="pm25Emission != null">
        pm25_emission,
      </if>
      <if test="ocEmission != null">
        oc_emission,
      </if>
      <if test="bcEmission != null">
        bc_emission,
      </if>
      <if test="longitude1 != null">
        LONGITUDE1,
      </if>
      <if test="latitude1 != null">
        LATITUDE1,
      </if>
      <if test="longitude2 != null">
        LONGITUDE2,
      </if>
      <if test="latitude2 != null">
        LATITUDE2,
      </if>
      <if test="longitude3 != null">
        LONGITUDE3,
      </if>
      <if test="latitude3 != null">
        LATITUDE3,
      </if>
      <if test="longitude4 != null">
        LONGITUDE4,
      </if>
      <if test="latitude4 != null">
        LATITUDE4,
      </if>
      <if test="constructionType != null">
        construction_type,
      </if>
      <if test="finishdate != null">
        finishdate,
      </if>
      <if test="shenheStatus != null">
        shenhe_status,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="constructDustid != null">
        #{constructDustid,jdbcType=INTEGER},
      </if>
      <if test="scccode != null">
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="factoryid != null">
        #{factoryid,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="constructState != null">
        #{constructState,jdbcType=VARCHAR},
      </if>
      <if test="constructArea != null">
        #{constructArea,jdbcType=DOUBLE},
      </if>
      <if test="constructMonths != null">
        #{constructMonths,jdbcType=VARCHAR},
      </if>
      <if test="controlMeasures != null">
        #{controlMeasures,jdbcType=VARCHAR},
      </if>
      <if test="finisharea != null">
        #{finisharea,jdbcType=DOUBLE},
      </if>
      <if test="nowkgarea != null">
        #{nowkgarea,jdbcType=DOUBLE},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=DATE},
      </if>
      <if test="pm25Factors != null">
        #{pm25Factors,jdbcType=DOUBLE},
      </if>
      <if test="pm10Factors != null">
        #{pm10Factors,jdbcType=DOUBLE},
      </if>
      <if test="ocFactors != null">
        #{ocFactors,jdbcType=DOUBLE},
      </if>
      <if test="bcFactors != null">
        #{bcFactors,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="longitude1 != null">
        #{longitude1,jdbcType=DOUBLE},
      </if>
      <if test="latitude1 != null">
        #{latitude1,jdbcType=DOUBLE},
      </if>
      <if test="longitude2 != null">
        #{longitude2,jdbcType=DOUBLE},
      </if>
      <if test="latitude2 != null">
        #{latitude2,jdbcType=DOUBLE},
      </if>
      <if test="longitude3 != null">
        #{longitude3,jdbcType=DOUBLE},
      </if>
      <if test="latitude3 != null">
        #{latitude3,jdbcType=DOUBLE},
      </if>
      <if test="longitude4 != null">
        #{longitude4,jdbcType=DOUBLE},
      </if>
      <if test="latitude4 != null">
        #{latitude4,jdbcType=DOUBLE},
      </if>
      <if test="constructionType != null">
        #{constructionType,jdbcType=VARCHAR},
      </if>
      <if test="finishdate != null">
        #{finishdate,jdbcType=DATE},
      </if>
      <if test="shenheStatus != null">
        #{shenheStatus,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.FConstructionDustSourceExample" resultType="java.lang.Long">
    select count(*) from f_construction_dust_source
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update f_construction_dust_source
    <set>
      <if test="record.constructDustid != null">
        construct_dustid = #{record.constructDustid,jdbcType=INTEGER},
      </if>
      <if test="record.scccode != null">
        scccode = #{record.scccode,jdbcType=CHAR},
      </if>
      <if test="record.factoryid != null">
        factoryid = #{record.factoryid,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.companyName != null">
        Company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.constructState != null">
        construct_state = #{record.constructState,jdbcType=VARCHAR},
      </if>
      <if test="record.constructArea != null">
        construct_area = #{record.constructArea,jdbcType=DOUBLE},
      </if>
      <if test="record.constructMonths != null">
        construct_months = #{record.constructMonths,jdbcType=VARCHAR},
      </if>
      <if test="record.controlMeasures != null">
        control_measures = #{record.controlMeasures,jdbcType=VARCHAR},
      </if>
      <if test="record.finisharea != null">
        finisharea = #{record.finisharea,jdbcType=DOUBLE},
      </if>
      <if test="record.nowkgarea != null">
        nowkgarea = #{record.nowkgarea,jdbcType=DOUBLE},
      </if>
      <if test="record.startdate != null">
        startdate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.pm25Factors != null">
        pm25_factors = #{record.pm25Factors,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10Factors != null">
        pm10_factors = #{record.pm10Factors,jdbcType=DOUBLE},
      </if>
      <if test="record.ocFactors != null">
        oc_factors = #{record.ocFactors,jdbcType=DOUBLE},
      </if>
      <if test="record.bcFactors != null">
        bc_factors = #{record.bcFactors,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10Emission != null">
        pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25Emission != null">
        pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.ocEmission != null">
        oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.bcEmission != null">
        bc_emission = #{record.bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude1 != null">
        LONGITUDE1 = #{record.longitude1,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude1 != null">
        LATITUDE1 = #{record.latitude1,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude2 != null">
        LONGITUDE2 = #{record.longitude2,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude2 != null">
        LATITUDE2 = #{record.latitude2,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude3 != null">
        LONGITUDE3 = #{record.longitude3,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude3 != null">
        LATITUDE3 = #{record.latitude3,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude4 != null">
        LONGITUDE4 = #{record.longitude4,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude4 != null">
        LATITUDE4 = #{record.latitude4,jdbcType=DOUBLE},
      </if>
      <if test="record.constructionType != null">
        construction_type = #{record.constructionType,jdbcType=VARCHAR},
      </if>
      <if test="record.finishdate != null">
        finishdate = #{record.finishdate,jdbcType=DATE},
      </if>
      <if test="record.shenheStatus != null">
        shenhe_status = #{record.shenheStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update f_construction_dust_source
    set construct_dustid = #{record.constructDustid,jdbcType=INTEGER},
      scccode = #{record.scccode,jdbcType=CHAR},
      factoryid = #{record.factoryid,jdbcType=INTEGER},
      year = #{record.year,jdbcType=CHAR},
      Company_name = #{record.companyName,jdbcType=VARCHAR},
      construct_state = #{record.constructState,jdbcType=VARCHAR},
      construct_area = #{record.constructArea,jdbcType=DOUBLE},
      construct_months = #{record.constructMonths,jdbcType=VARCHAR},
      control_measures = #{record.controlMeasures,jdbcType=VARCHAR},
      finisharea = #{record.finisharea,jdbcType=DOUBLE},
      nowkgarea = #{record.nowkgarea,jdbcType=DOUBLE},
      startdate = #{record.startdate,jdbcType=DATE},
      pm25_factors = #{record.pm25Factors,jdbcType=DOUBLE},
      pm10_factors = #{record.pm10Factors,jdbcType=DOUBLE},
      oc_factors = #{record.ocFactors,jdbcType=DOUBLE},
      bc_factors = #{record.bcFactors,jdbcType=DOUBLE},
      pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      bc_emission = #{record.bcEmission,jdbcType=DOUBLE},
      LONGITUDE1 = #{record.longitude1,jdbcType=DOUBLE},
      LATITUDE1 = #{record.latitude1,jdbcType=DOUBLE},
      LONGITUDE2 = #{record.longitude2,jdbcType=DOUBLE},
      LATITUDE2 = #{record.latitude2,jdbcType=DOUBLE},
      LONGITUDE3 = #{record.longitude3,jdbcType=DOUBLE},
      LATITUDE3 = #{record.latitude3,jdbcType=DOUBLE},
      LONGITUDE4 = #{record.longitude4,jdbcType=DOUBLE},
      LATITUDE4 = #{record.latitude4,jdbcType=DOUBLE},
      construction_type = #{record.constructionType,jdbcType=VARCHAR},
      finishdate = #{record.finishdate,jdbcType=DATE},
      shenhe_status = #{record.shenheStatus,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.FConstructionDustSource">
    update f_construction_dust_source
    <set>
      <if test="scccode != null">
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="factoryid != null">
        factoryid = #{factoryid,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="companyName != null">
        Company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="constructState != null">
        construct_state = #{constructState,jdbcType=VARCHAR},
      </if>
      <if test="constructArea != null">
        construct_area = #{constructArea,jdbcType=DOUBLE},
      </if>
      <if test="constructMonths != null">
        construct_months = #{constructMonths,jdbcType=VARCHAR},
      </if>
      <if test="controlMeasures != null">
        control_measures = #{controlMeasures,jdbcType=VARCHAR},
      </if>
      <if test="finisharea != null">
        finisharea = #{finisharea,jdbcType=DOUBLE},
      </if>
      <if test="nowkgarea != null">
        nowkgarea = #{nowkgarea,jdbcType=DOUBLE},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=DATE},
      </if>
      <if test="pm25Factors != null">
        pm25_factors = #{pm25Factors,jdbcType=DOUBLE},
      </if>
      <if test="pm10Factors != null">
        pm10_factors = #{pm10Factors,jdbcType=DOUBLE},
      </if>
      <if test="ocFactors != null">
        oc_factors = #{ocFactors,jdbcType=DOUBLE},
      </if>
      <if test="bcFactors != null">
        bc_factors = #{bcFactors,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="longitude1 != null">
        LONGITUDE1 = #{longitude1,jdbcType=DOUBLE},
      </if>
      <if test="latitude1 != null">
        LATITUDE1 = #{latitude1,jdbcType=DOUBLE},
      </if>
      <if test="longitude2 != null">
        LONGITUDE2 = #{longitude2,jdbcType=DOUBLE},
      </if>
      <if test="latitude2 != null">
        LATITUDE2 = #{latitude2,jdbcType=DOUBLE},
      </if>
      <if test="longitude3 != null">
        LONGITUDE3 = #{longitude3,jdbcType=DOUBLE},
      </if>
      <if test="latitude3 != null">
        LATITUDE3 = #{latitude3,jdbcType=DOUBLE},
      </if>
      <if test="longitude4 != null">
        LONGITUDE4 = #{longitude4,jdbcType=DOUBLE},
      </if>
      <if test="latitude4 != null">
        LATITUDE4 = #{latitude4,jdbcType=DOUBLE},
      </if>
      <if test="constructionType != null">
        construction_type = #{constructionType,jdbcType=VARCHAR},
      </if>
      <if test="finishdate != null">
        finishdate = #{finishdate,jdbcType=DATE},
      </if>
      <if test="shenheStatus != null">
        shenhe_status = #{shenheStatus,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where construct_dustid = #{constructDustid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.FConstructionDustSource">
    update f_construction_dust_source
    set scccode = #{scccode,jdbcType=CHAR},
      factoryid = #{factoryid,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      Company_name = #{companyName,jdbcType=VARCHAR},
      construct_state = #{constructState,jdbcType=VARCHAR},
      construct_area = #{constructArea,jdbcType=DOUBLE},
      construct_months = #{constructMonths,jdbcType=VARCHAR},
      control_measures = #{controlMeasures,jdbcType=VARCHAR},
      finisharea = #{finisharea,jdbcType=DOUBLE},
      nowkgarea = #{nowkgarea,jdbcType=DOUBLE},
      startdate = #{startdate,jdbcType=DATE},
      pm25_factors = #{pm25Factors,jdbcType=DOUBLE},
      pm10_factors = #{pm10Factors,jdbcType=DOUBLE},
      oc_factors = #{ocFactors,jdbcType=DOUBLE},
      bc_factors = #{bcFactors,jdbcType=DOUBLE},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE},
      LONGITUDE1 = #{longitude1,jdbcType=DOUBLE},
      LATITUDE1 = #{latitude1,jdbcType=DOUBLE},
      LONGITUDE2 = #{longitude2,jdbcType=DOUBLE},
      LATITUDE2 = #{latitude2,jdbcType=DOUBLE},
      LONGITUDE3 = #{longitude3,jdbcType=DOUBLE},
      LATITUDE3 = #{latitude3,jdbcType=DOUBLE},
      LONGITUDE4 = #{longitude4,jdbcType=DOUBLE},
      LATITUDE4 = #{latitude4,jdbcType=DOUBLE},
      construction_type = #{constructionType,jdbcType=VARCHAR},
      finishdate = #{finishdate,jdbcType=DATE},
      shenhe_status = #{shenheStatus,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where construct_dustid = #{constructDustid,jdbcType=INTEGER}
  </update>
</mapper>