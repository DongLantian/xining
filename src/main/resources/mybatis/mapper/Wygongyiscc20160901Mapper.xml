<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.Wygongyiscc20160901Mapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Wygongyiscc20160901">
    <id column="TJ_SCC" jdbcType="CHAR" property="tjScc" />
    <result column="EPA-SCC
EPA-SCC" jdbcType="CHAR" property="epaScc
epaScc" />
    <result column="L2name" jdbcType="VARCHAR" property="l2name" />
    <result column="L3name" jdbcType="VARCHAR" property="l3name" />
    <result column="L4name" jdbcType="VARCHAR" property="l4name" />
    <result column="CO" jdbcType="DOUBLE" property="co" />
    <result column="NOX" jdbcType="DOUBLE" property="nox" />
    <result column="SO2" jdbcType="DOUBLE" property="so2" />
    <result column="NH3" jdbcType="DOUBLE" property="nh3" />
    <result column="VOCS" jdbcType="DOUBLE" property="vocs" />
    <result column="PM25" jdbcType="DOUBLE" property="pm25" />
    <result column="PM10" jdbcType="DOUBLE" property="pm10" />
    <result column="BC" jdbcType="DOUBLE" property="bc" />
    <result column="OC" jdbcType="DOUBLE" property="oc" />
    <result column="unit" jdbcType="CHAR" property="unit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TJ_SCC, EPA-SCC
EPA-SCC, L2name, L3name, L4name, CO, NOX, SO2, NH3, VOCS, PM25, 
    PM10, BC, OC, unit
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.Wygongyiscc20160901Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wygongyiscc20160901
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wygongyiscc20160901
    where TJ_SCC = #{tjScc,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from wygongyiscc20160901
    where TJ_SCC = #{tjScc,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.Wygongyiscc20160901Example">
    delete from wygongyiscc20160901
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Wygongyiscc20160901">
    insert into wygongyiscc20160901 (TJ_SCC, EPA-SCC
EPA-SCC, L2name, 
      L3name, L4name, CO, 
      NOX, SO2, NH3, VOCS, 
      PM25, PM10, BC, OC, 
      unit)
    values (#{tjScc,jdbcType=CHAR}, #{epaScc
epaScc,jdbcType=CHAR}, #{l2name,jdbcType=VARCHAR}, 
      #{l3name,jdbcType=VARCHAR}, #{l4name,jdbcType=VARCHAR}, #{co,jdbcType=DOUBLE}, 
      #{nox,jdbcType=DOUBLE}, #{so2,jdbcType=DOUBLE}, #{nh3,jdbcType=DOUBLE}, #{vocs,jdbcType=DOUBLE}, 
      #{pm25,jdbcType=DOUBLE}, #{pm10,jdbcType=DOUBLE}, #{bc,jdbcType=DOUBLE}, #{oc,jdbcType=DOUBLE}, 
      #{unit,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Wygongyiscc20160901">
    insert into wygongyiscc20160901
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tjScc != null">
        TJ_SCC,
      </if>
      <if test="epaScc
epaScc != null">
        EPA-SCC
EPA-SCC,
      </if>
      <if test="l2name != null">
        L2name,
      </if>
      <if test="l3name != null">
        L3name,
      </if>
      <if test="l4name != null">
        L4name,
      </if>
      <if test="co != null">
        CO,
      </if>
      <if test="nox != null">
        NOX,
      </if>
      <if test="so2 != null">
        SO2,
      </if>
      <if test="nh3 != null">
        NH3,
      </if>
      <if test="vocs != null">
        VOCS,
      </if>
      <if test="pm25 != null">
        PM25,
      </if>
      <if test="pm10 != null">
        PM10,
      </if>
      <if test="bc != null">
        BC,
      </if>
      <if test="oc != null">
        OC,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tjScc != null">
        #{tjScc,jdbcType=CHAR},
      </if>
      <if test="epaScc
epaScc != null">
        #{epaScc
epaScc,jdbcType=CHAR},
      </if>
      <if test="l2name != null">
        #{l2name,jdbcType=VARCHAR},
      </if>
      <if test="l3name != null">
        #{l3name,jdbcType=VARCHAR},
      </if>
      <if test="l4name != null">
        #{l4name,jdbcType=VARCHAR},
      </if>
      <if test="co != null">
        #{co,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        #{nox,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="vocs != null">
        #{vocs,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="bc != null">
        #{bc,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        #{oc,jdbcType=DOUBLE},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.Wygongyiscc20160901Example" resultType="java.lang.Long">
    select count(*) from wygongyiscc20160901
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wygongyiscc20160901
    <set>
      <if test="record.tjScc != null">
        TJ_SCC = #{record.tjScc,jdbcType=CHAR},
      </if>
      <if test="record.epaScc
epaScc != null">
        EPA-SCC
EPA-SCC = #{record.epaScc
epaScc,jdbcType=CHAR},
      </if>
      <if test="record.l2name != null">
        L2name = #{record.l2name,jdbcType=VARCHAR},
      </if>
      <if test="record.l3name != null">
        L3name = #{record.l3name,jdbcType=VARCHAR},
      </if>
      <if test="record.l4name != null">
        L4name = #{record.l4name,jdbcType=VARCHAR},
      </if>
      <if test="record.co != null">
        CO = #{record.co,jdbcType=DOUBLE},
      </if>
      <if test="record.nox != null">
        NOX = #{record.nox,jdbcType=DOUBLE},
      </if>
      <if test="record.so2 != null">
        SO2 = #{record.so2,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3 != null">
        NH3 = #{record.nh3,jdbcType=DOUBLE},
      </if>
      <if test="record.vocs != null">
        VOCS = #{record.vocs,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25 != null">
        PM25 = #{record.pm25,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10 != null">
        PM10 = #{record.pm10,jdbcType=DOUBLE},
      </if>
      <if test="record.bc != null">
        BC = #{record.bc,jdbcType=DOUBLE},
      </if>
      <if test="record.oc != null">
        OC = #{record.oc,jdbcType=DOUBLE},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wygongyiscc20160901
    set TJ_SCC = #{record.tjScc,jdbcType=CHAR},
      EPA-SCC
EPA-SCC = #{record.epaScc
epaScc,jdbcType=CHAR},
      L2name = #{record.l2name,jdbcType=VARCHAR},
      L3name = #{record.l3name,jdbcType=VARCHAR},
      L4name = #{record.l4name,jdbcType=VARCHAR},
      CO = #{record.co,jdbcType=DOUBLE},
      NOX = #{record.nox,jdbcType=DOUBLE},
      SO2 = #{record.so2,jdbcType=DOUBLE},
      NH3 = #{record.nh3,jdbcType=DOUBLE},
      VOCS = #{record.vocs,jdbcType=DOUBLE},
      PM25 = #{record.pm25,jdbcType=DOUBLE},
      PM10 = #{record.pm10,jdbcType=DOUBLE},
      BC = #{record.bc,jdbcType=DOUBLE},
      OC = #{record.oc,jdbcType=DOUBLE},
      unit = #{record.unit,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.Wygongyiscc20160901">
    update wygongyiscc20160901
    <set>
      <if test="epaScc
epaScc != null">
        EPA-SCC
EPA-SCC = #{epaScc
epaScc,jdbcType=CHAR},
      </if>
      <if test="l2name != null">
        L2name = #{l2name,jdbcType=VARCHAR},
      </if>
      <if test="l3name != null">
        L3name = #{l3name,jdbcType=VARCHAR},
      </if>
      <if test="l4name != null">
        L4name = #{l4name,jdbcType=VARCHAR},
      </if>
      <if test="co != null">
        CO = #{co,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        NOX = #{nox,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        SO2 = #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        NH3 = #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="vocs != null">
        VOCS = #{vocs,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        PM25 = #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        PM10 = #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="bc != null">
        BC = #{bc,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        OC = #{oc,jdbcType=DOUBLE},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=CHAR},
      </if>
    </set>
    where TJ_SCC = #{tjScc,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.Wygongyiscc20160901">
    update wygongyiscc20160901
    set EPA-SCC
EPA-SCC = #{epaScc
epaScc,jdbcType=CHAR},
      L2name = #{l2name,jdbcType=VARCHAR},
      L3name = #{l3name,jdbcType=VARCHAR},
      L4name = #{l4name,jdbcType=VARCHAR},
      CO = #{co,jdbcType=DOUBLE},
      NOX = #{nox,jdbcType=DOUBLE},
      SO2 = #{so2,jdbcType=DOUBLE},
      NH3 = #{nh3,jdbcType=DOUBLE},
      VOCS = #{vocs,jdbcType=DOUBLE},
      PM25 = #{pm25,jdbcType=DOUBLE},
      PM10 = #{pm10,jdbcType=DOUBLE},
      BC = #{bc,jdbcType=DOUBLE},
      OC = #{oc,jdbcType=DOUBLE},
      unit = #{unit,jdbcType=CHAR}
    where TJ_SCC = #{tjScc,jdbcType=CHAR}
  </update>
</mapper>