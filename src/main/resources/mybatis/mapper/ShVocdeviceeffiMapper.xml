<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.ShVocdeviceeffiMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.ShVocdeviceeffi">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
    <result column="workshop_section" jdbcType="VARCHAR" property="workshopSection" />
    <result column="gy_name" jdbcType="CHAR" property="gyName" />
    <result column="exit_airVolume" jdbcType="DOUBLE" property="exitAirvolume" />
    <result column="annual_runtime" jdbcType="DOUBLE" property="annualRuntime" />
    <result column="exit_concentration" jdbcType="DOUBLE" property="exitConcentration" />
    <result column="efficency" jdbcType="DOUBLE" property="efficency" />
    <result column="pm10_emission" jdbcType="DOUBLE" property="pm10Emission" />
    <result column="pm25_emission" jdbcType="DOUBLE" property="pm25Emission" />
    <result column="so2_emission" jdbcType="DOUBLE" property="so2Emission" />
    <result column="nox_emission" jdbcType="DOUBLE" property="noxEmission" />
    <result column="voc_emission" jdbcType="DOUBLE" property="vocEmission" />
    <result column="nh3_emission" jdbcType="DOUBLE" property="nh3Emission" />
    <result column="co_emission" jdbcType="DOUBLE" property="coEmission" />
    <result column="oc_emission" jdbcType="DOUBLE" property="ocEmission" />
    <result column="bc_emission" jdbcType="DOUBLE" property="bcEmission" />
    <result column="emission_unit" jdbcType="CHAR" property="emissionUnit" />
    <result column="scccode" jdbcType="CHAR" property="scccode" />
    <result column="source_discrip" jdbcType="VARCHAR" property="sourceDiscrip" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, factory_id, workshop_section, gy_name, exit_airVolume, annual_runtime, 
    exit_concentration, efficency, pm10_emission, pm25_emission, so2_emission, nox_emission, 
    voc_emission, nh3_emission, co_emission, oc_emission, bc_emission, emission_unit, 
    scccode, source_discrip, flag
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.ShVocdeviceeffiExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sh_vocdeviceeffi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sh_vocdeviceeffi
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sh_vocdeviceeffi
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.ShVocdeviceeffiExample">
    delete from sh_vocdeviceeffi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.ShVocdeviceeffi">
    insert into sh_vocdeviceeffi (id, year, factory_id, 
      workshop_section, gy_name, exit_airVolume, 
      annual_runtime, exit_concentration, efficency, 
      pm10_emission, pm25_emission, so2_emission, 
      nox_emission, voc_emission, nh3_emission, 
      co_emission, oc_emission, bc_emission, 
      emission_unit, scccode, source_discrip, 
      flag)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, #{factoryId,jdbcType=INTEGER}, 
      #{workshopSection,jdbcType=VARCHAR}, #{gyName,jdbcType=CHAR}, #{exitAirvolume,jdbcType=DOUBLE}, 
      #{annualRuntime,jdbcType=DOUBLE}, #{exitConcentration,jdbcType=DOUBLE}, #{efficency,jdbcType=DOUBLE}, 
      #{pm10Emission,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE}, #{so2Emission,jdbcType=DOUBLE}, 
      #{noxEmission,jdbcType=DOUBLE}, #{vocEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, 
      #{coEmission,jdbcType=DOUBLE}, #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE}, 
      #{emissionUnit,jdbcType=CHAR}, #{scccode,jdbcType=CHAR}, #{sourceDiscrip,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.ShVocdeviceeffi">
    insert into sh_vocdeviceeffi
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="factoryId != null">
        factory_id,
      </if>
      <if test="workshopSection != null">
        workshop_section,
      </if>
      <if test="gyName != null">
        gy_name,
      </if>
      <if test="exitAirvolume != null">
        exit_airVolume,
      </if>
      <if test="annualRuntime != null">
        annual_runtime,
      </if>
      <if test="exitConcentration != null">
        exit_concentration,
      </if>
      <if test="efficency != null">
        efficency,
      </if>
      <if test="pm10Emission != null">
        pm10_emission,
      </if>
      <if test="pm25Emission != null">
        pm25_emission,
      </if>
      <if test="so2Emission != null">
        so2_emission,
      </if>
      <if test="noxEmission != null">
        nox_emission,
      </if>
      <if test="vocEmission != null">
        voc_emission,
      </if>
      <if test="nh3Emission != null">
        nh3_emission,
      </if>
      <if test="coEmission != null">
        co_emission,
      </if>
      <if test="ocEmission != null">
        oc_emission,
      </if>
      <if test="bcEmission != null">
        bc_emission,
      </if>
      <if test="emissionUnit != null">
        emission_unit,
      </if>
      <if test="scccode != null">
        scccode,
      </if>
      <if test="sourceDiscrip != null">
        source_discrip,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="factoryId != null">
        #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="workshopSection != null">
        #{workshopSection,jdbcType=VARCHAR},
      </if>
      <if test="gyName != null">
        #{gyName,jdbcType=CHAR},
      </if>
      <if test="exitAirvolume != null">
        #{exitAirvolume,jdbcType=DOUBLE},
      </if>
      <if test="annualRuntime != null">
        #{annualRuntime,jdbcType=DOUBLE},
      </if>
      <if test="exitConcentration != null">
        #{exitConcentration,jdbcType=DOUBLE},
      </if>
      <if test="efficency != null">
        #{efficency,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null">
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="emissionUnit != null">
        #{emissionUnit,jdbcType=CHAR},
      </if>
      <if test="scccode != null">
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="sourceDiscrip != null">
        #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.ShVocdeviceeffiExample" resultType="java.lang.Long">
    select count(*) from sh_vocdeviceeffi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sh_vocdeviceeffi
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.factoryId != null">
        factory_id = #{record.factoryId,jdbcType=INTEGER},
      </if>
      <if test="record.workshopSection != null">
        workshop_section = #{record.workshopSection,jdbcType=VARCHAR},
      </if>
      <if test="record.gyName != null">
        gy_name = #{record.gyName,jdbcType=CHAR},
      </if>
      <if test="record.exitAirvolume != null">
        exit_airVolume = #{record.exitAirvolume,jdbcType=DOUBLE},
      </if>
      <if test="record.annualRuntime != null">
        annual_runtime = #{record.annualRuntime,jdbcType=DOUBLE},
      </if>
      <if test="record.exitConcentration != null">
        exit_concentration = #{record.exitConcentration,jdbcType=DOUBLE},
      </if>
      <if test="record.efficency != null">
        efficency = #{record.efficency,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10Emission != null">
        pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25Emission != null">
        pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.so2Emission != null">
        so2_emission = #{record.so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.noxEmission != null">
        nox_emission = #{record.noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.vocEmission != null">
        voc_emission = #{record.vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3Emission != null">
        nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.coEmission != null">
        co_emission = #{record.coEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.ocEmission != null">
        oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.bcEmission != null">
        bc_emission = #{record.bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.emissionUnit != null">
        emission_unit = #{record.emissionUnit,jdbcType=CHAR},
      </if>
      <if test="record.scccode != null">
        scccode = #{record.scccode,jdbcType=CHAR},
      </if>
      <if test="record.sourceDiscrip != null">
        source_discrip = #{record.sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sh_vocdeviceeffi
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=CHAR},
      factory_id = #{record.factoryId,jdbcType=INTEGER},
      workshop_section = #{record.workshopSection,jdbcType=VARCHAR},
      gy_name = #{record.gyName,jdbcType=CHAR},
      exit_airVolume = #{record.exitAirvolume,jdbcType=DOUBLE},
      annual_runtime = #{record.annualRuntime,jdbcType=DOUBLE},
      exit_concentration = #{record.exitConcentration,jdbcType=DOUBLE},
      efficency = #{record.efficency,jdbcType=DOUBLE},
      pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      so2_emission = #{record.so2Emission,jdbcType=DOUBLE},
      nox_emission = #{record.noxEmission,jdbcType=DOUBLE},
      voc_emission = #{record.vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      co_emission = #{record.coEmission,jdbcType=DOUBLE},
      oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      bc_emission = #{record.bcEmission,jdbcType=DOUBLE},
      emission_unit = #{record.emissionUnit,jdbcType=CHAR},
      scccode = #{record.scccode,jdbcType=CHAR},
      source_discrip = #{record.sourceDiscrip,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.ShVocdeviceeffi">
    update sh_vocdeviceeffi
    <set>
      <if test="year != null">
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="factoryId != null">
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="workshopSection != null">
        workshop_section = #{workshopSection,jdbcType=VARCHAR},
      </if>
      <if test="gyName != null">
        gy_name = #{gyName,jdbcType=CHAR},
      </if>
      <if test="exitAirvolume != null">
        exit_airVolume = #{exitAirvolume,jdbcType=DOUBLE},
      </if>
      <if test="annualRuntime != null">
        annual_runtime = #{annualRuntime,jdbcType=DOUBLE},
      </if>
      <if test="exitConcentration != null">
        exit_concentration = #{exitConcentration,jdbcType=DOUBLE},
      </if>
      <if test="efficency != null">
        efficency = #{efficency,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null">
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="emissionUnit != null">
        emission_unit = #{emissionUnit,jdbcType=CHAR},
      </if>
      <if test="scccode != null">
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="sourceDiscrip != null">
        source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.ShVocdeviceeffi">
    update sh_vocdeviceeffi
    set year = #{year,jdbcType=CHAR},
      factory_id = #{factoryId,jdbcType=INTEGER},
      workshop_section = #{workshopSection,jdbcType=VARCHAR},
      gy_name = #{gyName,jdbcType=CHAR},
      exit_airVolume = #{exitAirvolume,jdbcType=DOUBLE},
      annual_runtime = #{annualRuntime,jdbcType=DOUBLE},
      exit_concentration = #{exitConcentration,jdbcType=DOUBLE},
      efficency = #{efficency,jdbcType=DOUBLE},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE},
      emission_unit = #{emissionUnit,jdbcType=CHAR},
      scccode = #{scccode,jdbcType=CHAR},
      source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>