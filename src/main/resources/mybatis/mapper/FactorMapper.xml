<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.FactorMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Factor">
    <id column="factorid" jdbcType="INTEGER" property="factorid" />
    <result column="ispave" jdbcType="BIT" property="ispave" />
    <result column="cy_dusttype" jdbcType="VARCHAR" property="cyDusttype" />
    <result column="pm25factor" jdbcType="DOUBLE" property="pm25factor" />
    <result column="pm10factor" jdbcType="DOUBLE" property="pm10factor" />
    <result column="dusttype" jdbcType="TINYINT" property="dusttype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    factorid, ispave, cy_dusttype, pm25factor, pm10factor, dusttype
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.FactorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from factor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from factor
    where factorid = #{factorid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from factor
    where factorid = #{factorid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.FactorExample">
    delete from factor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Factor">
    insert into factor (factorid, ispave, cy_dusttype, 
      pm25factor, pm10factor, dusttype
      )
    values (#{factorid,jdbcType=INTEGER}, #{ispave,jdbcType=BIT}, #{cyDusttype,jdbcType=VARCHAR}, 
      #{pm25factor,jdbcType=DOUBLE}, #{pm10factor,jdbcType=DOUBLE}, #{dusttype,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Factor">
    insert into factor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="factorid != null">
        factorid,
      </if>
      <if test="ispave != null">
        ispave,
      </if>
      <if test="cyDusttype != null">
        cy_dusttype,
      </if>
      <if test="pm25factor != null">
        pm25factor,
      </if>
      <if test="pm10factor != null">
        pm10factor,
      </if>
      <if test="dusttype != null">
        dusttype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="factorid != null">
        #{factorid,jdbcType=INTEGER},
      </if>
      <if test="ispave != null">
        #{ispave,jdbcType=BIT},
      </if>
      <if test="cyDusttype != null">
        #{cyDusttype,jdbcType=VARCHAR},
      </if>
      <if test="pm25factor != null">
        #{pm25factor,jdbcType=DOUBLE},
      </if>
      <if test="pm10factor != null">
        #{pm10factor,jdbcType=DOUBLE},
      </if>
      <if test="dusttype != null">
        #{dusttype,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.FactorExample" resultType="java.lang.Long">
    select count(*) from factor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update factor
    <set>
      <if test="record.factorid != null">
        factorid = #{record.factorid,jdbcType=INTEGER},
      </if>
      <if test="record.ispave != null">
        ispave = #{record.ispave,jdbcType=BIT},
      </if>
      <if test="record.cyDusttype != null">
        cy_dusttype = #{record.cyDusttype,jdbcType=VARCHAR},
      </if>
      <if test="record.pm25factor != null">
        pm25factor = #{record.pm25factor,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10factor != null">
        pm10factor = #{record.pm10factor,jdbcType=DOUBLE},
      </if>
      <if test="record.dusttype != null">
        dusttype = #{record.dusttype,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update factor
    set factorid = #{record.factorid,jdbcType=INTEGER},
      ispave = #{record.ispave,jdbcType=BIT},
      cy_dusttype = #{record.cyDusttype,jdbcType=VARCHAR},
      pm25factor = #{record.pm25factor,jdbcType=DOUBLE},
      pm10factor = #{record.pm10factor,jdbcType=DOUBLE},
      dusttype = #{record.dusttype,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.Factor">
    update factor
    <set>
      <if test="ispave != null">
        ispave = #{ispave,jdbcType=BIT},
      </if>
      <if test="cyDusttype != null">
        cy_dusttype = #{cyDusttype,jdbcType=VARCHAR},
      </if>
      <if test="pm25factor != null">
        pm25factor = #{pm25factor,jdbcType=DOUBLE},
      </if>
      <if test="pm10factor != null">
        pm10factor = #{pm10factor,jdbcType=DOUBLE},
      </if>
      <if test="dusttype != null">
        dusttype = #{dusttype,jdbcType=TINYINT},
      </if>
    </set>
    where factorid = #{factorid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.Factor">
    update factor
    set ispave = #{ispave,jdbcType=BIT},
      cy_dusttype = #{cyDusttype,jdbcType=VARCHAR},
      pm25factor = #{pm25factor,jdbcType=DOUBLE},
      pm10factor = #{pm10factor,jdbcType=DOUBLE},
      dusttype = #{dusttype,jdbcType=TINYINT}
    where factorid = #{factorid,jdbcType=INTEGER}
  </update>
</mapper>