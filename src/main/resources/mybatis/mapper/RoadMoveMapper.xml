<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.RoadMoveMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.RoadMove">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scccode" jdbcType="CHAR" property="scccode" />
    <result column="source_discrip" jdbcType="VARCHAR" property="sourceDiscrip" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="county_city" jdbcType="CHAR" property="countyCity" />
    <result column="county_id" jdbcType="CHAR" property="countyId" />
    <result column="average_mile" jdbcType="DOUBLE" property="averageMile" />
    <result column="car_amount" jdbcType="DOUBLE" property="carAmount" />
    <result column="car_speed" jdbcType="DOUBLE" property="carSpeed" />
    <result column="fuel_type" jdbcType="VARCHAR" property="fuelType" />
    <result column="car_fuelamount" jdbcType="DOUBLE" property="carFuelamount" />
    <result column="orvr_percentage" jdbcType="DOUBLE" property="orvrPercentage" />
    <result column="average_samount" jdbcType="DOUBLE" property="averageSamount" />
    <result column="pm25_emission" jdbcType="DOUBLE" property="pm25Emission" />
    <result column="pm10_emission" jdbcType="DOUBLE" property="pm10Emission" />
    <result column="oc_emission" jdbcType="DOUBLE" property="ocEmission" />
    <result column="ec_emission" jdbcType="DOUBLE" property="ecEmission" />
    <result column="so2_emission" jdbcType="DOUBLE" property="so2Emission" />
    <result column="nox_emission" jdbcType="DOUBLE" property="noxEmission" />
    <result column="co_emission" jdbcType="DOUBLE" property="coEmission" />
    <result column="nh3_emission" jdbcType="DOUBLE" property="nh3Emission" />
    <result column="vocs_emission" jdbcType="DOUBLE" property="vocsEmission" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scccode, source_discrip, year, county_city, county_id, average_mile, car_amount, 
    car_speed, fuel_type, car_fuelamount, orvr_percentage, average_samount, pm25_emission, 
    pm10_emission, oc_emission, ec_emission, so2_emission, nox_emission, co_emission, 
    nh3_emission, vocs_emission, flag
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.RoadMoveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from road_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from road_move
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from road_move
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.RoadMoveExample">
    delete from road_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.RoadMove">
    insert into road_move (id, scccode, source_discrip, 
      year, county_city, county_id, 
      average_mile, car_amount, car_speed, 
      fuel_type, car_fuelamount, orvr_percentage, 
      average_samount, pm25_emission, pm10_emission, 
      oc_emission, ec_emission, so2_emission, 
      nox_emission, co_emission, nh3_emission, 
      vocs_emission, flag)
    values (#{id,jdbcType=INTEGER}, #{scccode,jdbcType=CHAR}, #{sourceDiscrip,jdbcType=VARCHAR}, 
      #{year,jdbcType=CHAR}, #{countyCity,jdbcType=CHAR}, #{countyId,jdbcType=CHAR}, 
      #{averageMile,jdbcType=DOUBLE}, #{carAmount,jdbcType=DOUBLE}, #{carSpeed,jdbcType=DOUBLE}, 
      #{fuelType,jdbcType=VARCHAR}, #{carFuelamount,jdbcType=DOUBLE}, #{orvrPercentage,jdbcType=DOUBLE}, 
      #{averageSamount,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE}, #{pm10Emission,jdbcType=DOUBLE}, 
      #{ocEmission,jdbcType=DOUBLE}, #{ecEmission,jdbcType=DOUBLE}, #{so2Emission,jdbcType=DOUBLE}, 
      #{noxEmission,jdbcType=DOUBLE}, #{coEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, 
      #{vocsEmission,jdbcType=DOUBLE}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.RoadMove">
    insert into road_move
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scccode != null">
        scccode,
      </if>
      <if test="sourceDiscrip != null">
        source_discrip,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="countyCity != null">
        county_city,
      </if>
      <if test="countyId != null">
        county_id,
      </if>
      <if test="averageMile != null">
        average_mile,
      </if>
      <if test="carAmount != null">
        car_amount,
      </if>
      <if test="carSpeed != null">
        car_speed,
      </if>
      <if test="fuelType != null">
        fuel_type,
      </if>
      <if test="carFuelamount != null">
        car_fuelamount,
      </if>
      <if test="orvrPercentage != null">
        orvr_percentage,
      </if>
      <if test="averageSamount != null">
        average_samount,
      </if>
      <if test="pm25Emission != null">
        pm25_emission,
      </if>
      <if test="pm10Emission != null">
        pm10_emission,
      </if>
      <if test="ocEmission != null">
        oc_emission,
      </if>
      <if test="ecEmission != null">
        ec_emission,
      </if>
      <if test="so2Emission != null">
        so2_emission,
      </if>
      <if test="noxEmission != null">
        nox_emission,
      </if>
      <if test="coEmission != null">
        co_emission,
      </if>
      <if test="nh3Emission != null">
        nh3_emission,
      </if>
      <if test="vocsEmission != null">
        vocs_emission,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scccode != null">
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="sourceDiscrip != null">
        #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="countyCity != null">
        #{countyCity,jdbcType=CHAR},
      </if>
      <if test="countyId != null">
        #{countyId,jdbcType=CHAR},
      </if>
      <if test="averageMile != null">
        #{averageMile,jdbcType=DOUBLE},
      </if>
      <if test="carAmount != null">
        #{carAmount,jdbcType=DOUBLE},
      </if>
      <if test="carSpeed != null">
        #{carSpeed,jdbcType=DOUBLE},
      </if>
      <if test="fuelType != null">
        #{fuelType,jdbcType=VARCHAR},
      </if>
      <if test="carFuelamount != null">
        #{carFuelamount,jdbcType=DOUBLE},
      </if>
      <if test="orvrPercentage != null">
        #{orvrPercentage,jdbcType=DOUBLE},
      </if>
      <if test="averageSamount != null">
        #{averageSamount,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="ecEmission != null">
        #{ecEmission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocsEmission != null">
        #{vocsEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.RoadMoveExample" resultType="java.lang.Long">
    select count(*) from road_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update road_move
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.scccode != null">
        scccode = #{record.scccode,jdbcType=CHAR},
      </if>
      <if test="record.sourceDiscrip != null">
        source_discrip = #{record.sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.countyCity != null">
        county_city = #{record.countyCity,jdbcType=CHAR},
      </if>
      <if test="record.countyId != null">
        county_id = #{record.countyId,jdbcType=CHAR},
      </if>
      <if test="record.averageMile != null">
        average_mile = #{record.averageMile,jdbcType=DOUBLE},
      </if>
      <if test="record.carAmount != null">
        car_amount = #{record.carAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.carSpeed != null">
        car_speed = #{record.carSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.fuelType != null">
        fuel_type = #{record.fuelType,jdbcType=VARCHAR},
      </if>
      <if test="record.carFuelamount != null">
        car_fuelamount = #{record.carFuelamount,jdbcType=DOUBLE},
      </if>
      <if test="record.orvrPercentage != null">
        orvr_percentage = #{record.orvrPercentage,jdbcType=DOUBLE},
      </if>
      <if test="record.averageSamount != null">
        average_samount = #{record.averageSamount,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25Emission != null">
        pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10Emission != null">
        pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.ocEmission != null">
        oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.ecEmission != null">
        ec_emission = #{record.ecEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.so2Emission != null">
        so2_emission = #{record.so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.noxEmission != null">
        nox_emission = #{record.noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.coEmission != null">
        co_emission = #{record.coEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3Emission != null">
        nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.vocsEmission != null">
        vocs_emission = #{record.vocsEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update road_move
    set id = #{record.id,jdbcType=INTEGER},
      scccode = #{record.scccode,jdbcType=CHAR},
      source_discrip = #{record.sourceDiscrip,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=CHAR},
      county_city = #{record.countyCity,jdbcType=CHAR},
      county_id = #{record.countyId,jdbcType=CHAR},
      average_mile = #{record.averageMile,jdbcType=DOUBLE},
      car_amount = #{record.carAmount,jdbcType=DOUBLE},
      car_speed = #{record.carSpeed,jdbcType=DOUBLE},
      fuel_type = #{record.fuelType,jdbcType=VARCHAR},
      car_fuelamount = #{record.carFuelamount,jdbcType=DOUBLE},
      orvr_percentage = #{record.orvrPercentage,jdbcType=DOUBLE},
      average_samount = #{record.averageSamount,jdbcType=DOUBLE},
      pm25_emission = #{record.pm25Emission,jdbcType=DOUBLE},
      pm10_emission = #{record.pm10Emission,jdbcType=DOUBLE},
      oc_emission = #{record.ocEmission,jdbcType=DOUBLE},
      ec_emission = #{record.ecEmission,jdbcType=DOUBLE},
      so2_emission = #{record.so2Emission,jdbcType=DOUBLE},
      nox_emission = #{record.noxEmission,jdbcType=DOUBLE},
      co_emission = #{record.coEmission,jdbcType=DOUBLE},
      nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      vocs_emission = #{record.vocsEmission,jdbcType=DOUBLE},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.RoadMove">
    update road_move
    <set>
      <if test="scccode != null">
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="sourceDiscrip != null">
        source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="countyCity != null">
        county_city = #{countyCity,jdbcType=CHAR},
      </if>
      <if test="countyId != null">
        county_id = #{countyId,jdbcType=CHAR},
      </if>
      <if test="averageMile != null">
        average_mile = #{averageMile,jdbcType=DOUBLE},
      </if>
      <if test="carAmount != null">
        car_amount = #{carAmount,jdbcType=DOUBLE},
      </if>
      <if test="carSpeed != null">
        car_speed = #{carSpeed,jdbcType=DOUBLE},
      </if>
      <if test="fuelType != null">
        fuel_type = #{fuelType,jdbcType=VARCHAR},
      </if>
      <if test="carFuelamount != null">
        car_fuelamount = #{carFuelamount,jdbcType=DOUBLE},
      </if>
      <if test="orvrPercentage != null">
        orvr_percentage = #{orvrPercentage,jdbcType=DOUBLE},
      </if>
      <if test="averageSamount != null">
        average_samount = #{averageSamount,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="ecEmission != null">
        ec_emission = #{ecEmission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocsEmission != null">
        vocs_emission = #{vocsEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.RoadMove">
    update road_move
    set scccode = #{scccode,jdbcType=CHAR},
      source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      year = #{year,jdbcType=CHAR},
      county_city = #{countyCity,jdbcType=CHAR},
      county_id = #{countyId,jdbcType=CHAR},
      average_mile = #{averageMile,jdbcType=DOUBLE},
      car_amount = #{carAmount,jdbcType=DOUBLE},
      car_speed = #{carSpeed,jdbcType=DOUBLE},
      fuel_type = #{fuelType,jdbcType=VARCHAR},
      car_fuelamount = #{carFuelamount,jdbcType=DOUBLE},
      orvr_percentage = #{orvrPercentage,jdbcType=DOUBLE},
      average_samount = #{averageSamount,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      ec_emission = #{ecEmission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      vocs_emission = #{vocsEmission,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>