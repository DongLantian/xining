<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.ExhaustMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Exhaust">
    <id column="EXF_ID" jdbcType="INTEGER" property="exfId" />
    <result column="NK_NO" jdbcType="INTEGER" property="nkNo" />
    <result column="FACTORY_ID" jdbcType="INTEGER" property="factoryId" />
    <result column="EXF_MATERIAL" jdbcType="CHAR" property="exfMaterial" />
    <result column="EXF_HEIGHT" jdbcType="DOUBLE" property="exfHeight" />
    <result column="SMOKE_OUTD" jdbcType="DOUBLE" property="smokeOutd" />
    <result column="SMOKE_O_UTTE_M" jdbcType="DOUBLE" property="smokeOUtteM" />
    <result column="SMOKE_OUTA" jdbcType="DOUBLE" property="smokeOuta" />
    <result column="SMOKE_OUTV" jdbcType="DOUBLE" property="smokeOutv" />
    <result column="EXF_LONGITUDE" jdbcType="DOUBLE" property="exfLongitude" />
    <result column="EXF_LATITUDE" jdbcType="DOUBLE" property="exfLatitude" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EXF_ID, NK_NO, FACTORY_ID, EXF_MATERIAL, EXF_HEIGHT, SMOKE_OUTD, SMOKE_O_UTTE_M, 
    SMOKE_OUTA, SMOKE_OUTV, EXF_LONGITUDE, EXF_LATITUDE
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.ExhaustExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exhaust
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exhaust
    where EXF_ID = #{exfId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exhaust
    where EXF_ID = #{exfId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.ExhaustExample">
    delete from exhaust
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Exhaust">
    insert into exhaust (EXF_ID, NK_NO, FACTORY_ID, 
      EXF_MATERIAL, EXF_HEIGHT, SMOKE_OUTD, 
      SMOKE_O_UTTE_M, SMOKE_OUTA, SMOKE_OUTV, 
      EXF_LONGITUDE, EXF_LATITUDE)
    values (#{exfId,jdbcType=INTEGER}, #{nkNo,jdbcType=INTEGER}, #{factoryId,jdbcType=INTEGER}, 
      #{exfMaterial,jdbcType=CHAR}, #{exfHeight,jdbcType=DOUBLE}, #{smokeOutd,jdbcType=DOUBLE}, 
      #{smokeOUtteM,jdbcType=DOUBLE}, #{smokeOuta,jdbcType=DOUBLE}, #{smokeOutv,jdbcType=DOUBLE}, 
      #{exfLongitude,jdbcType=DOUBLE}, #{exfLatitude,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Exhaust">
    insert into exhaust
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exfId != null">
        EXF_ID,
      </if>
      <if test="nkNo != null">
        NK_NO,
      </if>
      <if test="factoryId != null">
        FACTORY_ID,
      </if>
      <if test="exfMaterial != null">
        EXF_MATERIAL,
      </if>
      <if test="exfHeight != null">
        EXF_HEIGHT,
      </if>
      <if test="smokeOutd != null">
        SMOKE_OUTD,
      </if>
      <if test="smokeOUtteM != null">
        SMOKE_O_UTTE_M,
      </if>
      <if test="smokeOuta != null">
        SMOKE_OUTA,
      </if>
      <if test="smokeOutv != null">
        SMOKE_OUTV,
      </if>
      <if test="exfLongitude != null">
        EXF_LONGITUDE,
      </if>
      <if test="exfLatitude != null">
        EXF_LATITUDE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exfId != null">
        #{exfId,jdbcType=INTEGER},
      </if>
      <if test="nkNo != null">
        #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="exfMaterial != null">
        #{exfMaterial,jdbcType=CHAR},
      </if>
      <if test="exfHeight != null">
        #{exfHeight,jdbcType=DOUBLE},
      </if>
      <if test="smokeOutd != null">
        #{smokeOutd,jdbcType=DOUBLE},
      </if>
      <if test="smokeOUtteM != null">
        #{smokeOUtteM,jdbcType=DOUBLE},
      </if>
      <if test="smokeOuta != null">
        #{smokeOuta,jdbcType=DOUBLE},
      </if>
      <if test="smokeOutv != null">
        #{smokeOutv,jdbcType=DOUBLE},
      </if>
      <if test="exfLongitude != null">
        #{exfLongitude,jdbcType=DOUBLE},
      </if>
      <if test="exfLatitude != null">
        #{exfLatitude,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.ExhaustExample" resultType="java.lang.Long">
    select count(*) from exhaust
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exhaust
    <set>
      <if test="record.exfId != null">
        EXF_ID = #{record.exfId,jdbcType=INTEGER},
      </if>
      <if test="record.nkNo != null">
        NK_NO = #{record.nkNo,jdbcType=INTEGER},
      </if>
      <if test="record.factoryId != null">
        FACTORY_ID = #{record.factoryId,jdbcType=INTEGER},
      </if>
      <if test="record.exfMaterial != null">
        EXF_MATERIAL = #{record.exfMaterial,jdbcType=CHAR},
      </if>
      <if test="record.exfHeight != null">
        EXF_HEIGHT = #{record.exfHeight,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOutd != null">
        SMOKE_OUTD = #{record.smokeOutd,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOUtteM != null">
        SMOKE_O_UTTE_M = #{record.smokeOUtteM,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOuta != null">
        SMOKE_OUTA = #{record.smokeOuta,jdbcType=DOUBLE},
      </if>
      <if test="record.smokeOutv != null">
        SMOKE_OUTV = #{record.smokeOutv,jdbcType=DOUBLE},
      </if>
      <if test="record.exfLongitude != null">
        EXF_LONGITUDE = #{record.exfLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.exfLatitude != null">
        EXF_LATITUDE = #{record.exfLatitude,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exhaust
    set EXF_ID = #{record.exfId,jdbcType=INTEGER},
      NK_NO = #{record.nkNo,jdbcType=INTEGER},
      FACTORY_ID = #{record.factoryId,jdbcType=INTEGER},
      EXF_MATERIAL = #{record.exfMaterial,jdbcType=CHAR},
      EXF_HEIGHT = #{record.exfHeight,jdbcType=DOUBLE},
      SMOKE_OUTD = #{record.smokeOutd,jdbcType=DOUBLE},
      SMOKE_O_UTTE_M = #{record.smokeOUtteM,jdbcType=DOUBLE},
      SMOKE_OUTA = #{record.smokeOuta,jdbcType=DOUBLE},
      SMOKE_OUTV = #{record.smokeOutv,jdbcType=DOUBLE},
      EXF_LONGITUDE = #{record.exfLongitude,jdbcType=DOUBLE},
      EXF_LATITUDE = #{record.exfLatitude,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.Exhaust">
    update exhaust
    <set>
      <if test="nkNo != null">
        NK_NO = #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        FACTORY_ID = #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="exfMaterial != null">
        EXF_MATERIAL = #{exfMaterial,jdbcType=CHAR},
      </if>
      <if test="exfHeight != null">
        EXF_HEIGHT = #{exfHeight,jdbcType=DOUBLE},
      </if>
      <if test="smokeOutd != null">
        SMOKE_OUTD = #{smokeOutd,jdbcType=DOUBLE},
      </if>
      <if test="smokeOUtteM != null">
        SMOKE_O_UTTE_M = #{smokeOUtteM,jdbcType=DOUBLE},
      </if>
      <if test="smokeOuta != null">
        SMOKE_OUTA = #{smokeOuta,jdbcType=DOUBLE},
      </if>
      <if test="smokeOutv != null">
        SMOKE_OUTV = #{smokeOutv,jdbcType=DOUBLE},
      </if>
      <if test="exfLongitude != null">
        EXF_LONGITUDE = #{exfLongitude,jdbcType=DOUBLE},
      </if>
      <if test="exfLatitude != null">
        EXF_LATITUDE = #{exfLatitude,jdbcType=DOUBLE},
      </if>
    </set>
    where EXF_ID = #{exfId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.Exhaust">
    update exhaust
    set NK_NO = #{nkNo,jdbcType=INTEGER},
      FACTORY_ID = #{factoryId,jdbcType=INTEGER},
      EXF_MATERIAL = #{exfMaterial,jdbcType=CHAR},
      EXF_HEIGHT = #{exfHeight,jdbcType=DOUBLE},
      SMOKE_OUTD = #{smokeOutd,jdbcType=DOUBLE},
      SMOKE_O_UTTE_M = #{smokeOUtteM,jdbcType=DOUBLE},
      SMOKE_OUTA = #{smokeOuta,jdbcType=DOUBLE},
      SMOKE_OUTV = #{smokeOutv,jdbcType=DOUBLE},
      EXF_LONGITUDE = #{exfLongitude,jdbcType=DOUBLE},
      EXF_LATITUDE = #{exfLatitude,jdbcType=DOUBLE}
    where EXF_ID = #{exfId,jdbcType=INTEGER}
  </update>
</mapper>