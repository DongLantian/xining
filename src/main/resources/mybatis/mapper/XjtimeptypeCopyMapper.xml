<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.XjtimeptypeCopyMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.XjtimeptypeCopy">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="scc1" jdbcType="VARCHAR" property="scc1" />
    <result column="scc2" jdbcType="VARCHAR" property="scc2" />
    <result column="bc" jdbcType="DOUBLE" property="bc" />
    <result column="co" jdbcType="DOUBLE" property="co" />
    <result column="pm10" jdbcType="DOUBLE" property="pm10" />
    <result column="pm25" jdbcType="DOUBLE" property="pm25" />
    <result column="vocs" jdbcType="DOUBLE" property="vocs" />
    <result column="oc" jdbcType="DOUBLE" property="oc" />
    <result column="so2" jdbcType="DOUBLE" property="so2" />
    <result column="nox" jdbcType="DOUBLE" property="nox" />
    <result column="nh3" jdbcType="DOUBLE" property="nh3" />
    <result column="ec" jdbcType="DOUBLE" property="ec" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cid, year, scc1, scc2, bc, co, pm10, pm25, vocs, oc, so2, nox, nh3, ec
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.XjtimeptypeCopyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xjtimeptype_copy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xjtimeptype_copy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xjtimeptype_copy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.XjtimeptypeCopyExample">
    delete from xjtimeptype_copy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.XjtimeptypeCopy">
    insert into xjtimeptype_copy (id, cid, year, 
      scc1, scc2, bc, co, 
      pm10, pm25, vocs, oc, 
      so2, nox, nh3, ec
      )
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, 
      #{scc1,jdbcType=VARCHAR}, #{scc2,jdbcType=VARCHAR}, #{bc,jdbcType=DOUBLE}, #{co,jdbcType=DOUBLE}, 
      #{pm10,jdbcType=DOUBLE}, #{pm25,jdbcType=DOUBLE}, #{vocs,jdbcType=DOUBLE}, #{oc,jdbcType=DOUBLE}, 
      #{so2,jdbcType=DOUBLE}, #{nox,jdbcType=DOUBLE}, #{nh3,jdbcType=DOUBLE}, #{ec,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.XjtimeptypeCopy">
    insert into xjtimeptype_copy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="scc1 != null">
        scc1,
      </if>
      <if test="scc2 != null">
        scc2,
      </if>
      <if test="bc != null">
        bc,
      </if>
      <if test="co != null">
        co,
      </if>
      <if test="pm10 != null">
        pm10,
      </if>
      <if test="pm25 != null">
        pm25,
      </if>
      <if test="vocs != null">
        vocs,
      </if>
      <if test="oc != null">
        oc,
      </if>
      <if test="so2 != null">
        so2,
      </if>
      <if test="nox != null">
        nox,
      </if>
      <if test="nh3 != null">
        nh3,
      </if>
      <if test="ec != null">
        ec,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="scc1 != null">
        #{scc1,jdbcType=VARCHAR},
      </if>
      <if test="scc2 != null">
        #{scc2,jdbcType=VARCHAR},
      </if>
      <if test="bc != null">
        #{bc,jdbcType=DOUBLE},
      </if>
      <if test="co != null">
        #{co,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="vocs != null">
        #{vocs,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        #{oc,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        #{nox,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="ec != null">
        #{ec,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.XjtimeptypeCopyExample" resultType="java.lang.Long">
    select count(*) from xjtimeptype_copy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xjtimeptype_copy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.scc1 != null">
        scc1 = #{record.scc1,jdbcType=VARCHAR},
      </if>
      <if test="record.scc2 != null">
        scc2 = #{record.scc2,jdbcType=VARCHAR},
      </if>
      <if test="record.bc != null">
        bc = #{record.bc,jdbcType=DOUBLE},
      </if>
      <if test="record.co != null">
        co = #{record.co,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10 != null">
        pm10 = #{record.pm10,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25 != null">
        pm25 = #{record.pm25,jdbcType=DOUBLE},
      </if>
      <if test="record.vocs != null">
        vocs = #{record.vocs,jdbcType=DOUBLE},
      </if>
      <if test="record.oc != null">
        oc = #{record.oc,jdbcType=DOUBLE},
      </if>
      <if test="record.so2 != null">
        so2 = #{record.so2,jdbcType=DOUBLE},
      </if>
      <if test="record.nox != null">
        nox = #{record.nox,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3 != null">
        nh3 = #{record.nh3,jdbcType=DOUBLE},
      </if>
      <if test="record.ec != null">
        ec = #{record.ec,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xjtimeptype_copy
    set id = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      scc1 = #{record.scc1,jdbcType=VARCHAR},
      scc2 = #{record.scc2,jdbcType=VARCHAR},
      bc = #{record.bc,jdbcType=DOUBLE},
      co = #{record.co,jdbcType=DOUBLE},
      pm10 = #{record.pm10,jdbcType=DOUBLE},
      pm25 = #{record.pm25,jdbcType=DOUBLE},
      vocs = #{record.vocs,jdbcType=DOUBLE},
      oc = #{record.oc,jdbcType=DOUBLE},
      so2 = #{record.so2,jdbcType=DOUBLE},
      nox = #{record.nox,jdbcType=DOUBLE},
      nh3 = #{record.nh3,jdbcType=DOUBLE},
      ec = #{record.ec,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.XjtimeptypeCopy">
    update xjtimeptype_copy
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="scc1 != null">
        scc1 = #{scc1,jdbcType=VARCHAR},
      </if>
      <if test="scc2 != null">
        scc2 = #{scc2,jdbcType=VARCHAR},
      </if>
      <if test="bc != null">
        bc = #{bc,jdbcType=DOUBLE},
      </if>
      <if test="co != null">
        co = #{co,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        pm10 = #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        pm25 = #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="vocs != null">
        vocs = #{vocs,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        oc = #{oc,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        so2 = #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        nox = #{nox,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        nh3 = #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="ec != null">
        ec = #{ec,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.XjtimeptypeCopy">
    update xjtimeptype_copy
    set cid = #{cid,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      scc1 = #{scc1,jdbcType=VARCHAR},
      scc2 = #{scc2,jdbcType=VARCHAR},
      bc = #{bc,jdbcType=DOUBLE},
      co = #{co,jdbcType=DOUBLE},
      pm10 = #{pm10,jdbcType=DOUBLE},
      pm25 = #{pm25,jdbcType=DOUBLE},
      vocs = #{vocs,jdbcType=DOUBLE},
      oc = #{oc,jdbcType=DOUBLE},
      so2 = #{so2,jdbcType=DOUBLE},
      nox = #{nox,jdbcType=DOUBLE},
      nh3 = #{nh3,jdbcType=DOUBLE},
      ec = #{ec,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>