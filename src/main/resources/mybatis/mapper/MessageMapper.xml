<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.MessageMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Message">
    <id column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="m_from" jdbcType="INTEGER" property="mFrom" />
    <result column="m_to" jdbcType="INTEGER" property="mTo" />
    <result column="m_time" jdbcType="TIMESTAMP" property="mTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.nankai.xining.bean.Message">
    <result column="m_content" jdbcType="LONGVARCHAR" property="mContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    m_id, m_from, m_to, m_time
  </sql>
  <sql id="Blob_Column_List">
    m_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.nankai.xining.bean.MessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where m_id = #{mId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where m_id = #{mId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Message">
    insert into message (m_id, m_from, m_to, 
      m_time, m_content)
    values (#{mId,jdbcType=INTEGER}, #{mFrom,jdbcType=INTEGER}, #{mTo,jdbcType=INTEGER}, 
      #{mTime,jdbcType=TIMESTAMP}, #{mContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        m_id,
      </if>
      <if test="mFrom != null">
        m_from,
      </if>
      <if test="mTo != null">
        m_to,
      </if>
      <if test="mTime != null">
        m_time,
      </if>
      <if test="mContent != null">
        m_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="mFrom != null">
        #{mFrom,jdbcType=INTEGER},
      </if>
      <if test="mTo != null">
        #{mTo,jdbcType=INTEGER},
      </if>
      <if test="mTime != null">
        #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mContent != null">
        #{mContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.mId != null">
        m_id = #{record.mId,jdbcType=INTEGER},
      </if>
      <if test="record.mFrom != null">
        m_from = #{record.mFrom,jdbcType=INTEGER},
      </if>
      <if test="record.mTo != null">
        m_to = #{record.mTo,jdbcType=INTEGER},
      </if>
      <if test="record.mTime != null">
        m_time = #{record.mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mContent != null">
        m_content = #{record.mContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update message
    set m_id = #{record.mId,jdbcType=INTEGER},
      m_from = #{record.mFrom,jdbcType=INTEGER},
      m_to = #{record.mTo,jdbcType=INTEGER},
      m_time = #{record.mTime,jdbcType=TIMESTAMP},
      m_content = #{record.mContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set m_id = #{record.mId,jdbcType=INTEGER},
      m_from = #{record.mFrom,jdbcType=INTEGER},
      m_to = #{record.mTo,jdbcType=INTEGER},
      m_time = #{record.mTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.Message">
    update message
    <set>
      <if test="mFrom != null">
        m_from = #{mFrom,jdbcType=INTEGER},
      </if>
      <if test="mTo != null">
        m_to = #{mTo,jdbcType=INTEGER},
      </if>
      <if test="mTime != null">
        m_time = #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mContent != null">
        m_content = #{mContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nankai.xining.bean.Message">
    update message
    set m_from = #{mFrom,jdbcType=INTEGER},
      m_to = #{mTo,jdbcType=INTEGER},
      m_time = #{mTime,jdbcType=TIMESTAMP},
      m_content = #{mContent,jdbcType=LONGVARCHAR}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.Message">
    update message
    set m_from = #{mFrom,jdbcType=INTEGER},
      m_to = #{mTo,jdbcType=INTEGER},
      m_time = #{mTime,jdbcType=TIMESTAMP}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
</mapper>