<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.STransportMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.STransport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="countyId" jdbcType="CHAR" property="countyid" />
    <result column="oilname" jdbcType="CHAR" property="oilname" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="scccode" jdbcType="CHAR" property="scccode" />
    <result column="Store_material" jdbcType="CHAR" property="storeMaterial" />
    <result column="ftk" jdbcType="DOUBLE" property="ftk" />
    <result column="Source_storage" jdbcType="CHAR" property="sourceStorage" />
    <result column="fueltype" jdbcType="CHAR" property="fueltype" />
    <result column="nh3_temf" jdbcType="DOUBLE" property="nh3Temf" />
    <result column="nh3_temfunit" jdbcType="CHAR" property="nh3Temfunit" />
    <result column="voc_temf" jdbcType="DOUBLE" property="vocTemf" />
    <result column="voc_temfunit" jdbcType="CHAR" property="vocTemfunit" />
    <result column="nh3_pemf" jdbcType="DOUBLE" property="nh3Pemf" />
    <result column="nh3_pemfunit" jdbcType="CHAR" property="nh3Pemfunit" />
    <result column="voc_pemf" jdbcType="DOUBLE" property="vocPemf" />
    <result column="voc_pemfunit" jdbcType="CHAR" property="vocPemfunit" />
    <result column="nh3_emission" jdbcType="DOUBLE" property="nh3Emission" />
    <result column="nh3_emiunit" jdbcType="CHAR" property="nh3Emiunit" />
    <result column="voc_emission" jdbcType="DOUBLE" property="vocEmission" />
    <result column="voc_emiunit" jdbcType="CHAR" property="vocEmiunit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, countyId, oilname, address, longitude, latitude, scccode, Store_material, 
    ftk, Source_storage, fueltype, nh3_temf, nh3_temfunit, voc_temf, voc_temfunit, nh3_pemf, 
    nh3_pemfunit, voc_pemf, voc_pemfunit, nh3_emission, nh3_emiunit, voc_emission, voc_emiunit
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.STransportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_transport
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_transport
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_transport
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.STransportExample">
    delete from s_transport
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.STransport">
    insert into s_transport (id, year, countyId, 
      oilname, address, longitude, 
      latitude, scccode, Store_material, 
      ftk, Source_storage, fueltype, 
      nh3_temf, nh3_temfunit, voc_temf, 
      voc_temfunit, nh3_pemf, nh3_pemfunit, 
      voc_pemf, voc_pemfunit, nh3_emission, 
      nh3_emiunit, voc_emission, voc_emiunit
      )
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, #{countyid,jdbcType=CHAR}, 
      #{oilname,jdbcType=CHAR}, #{address,jdbcType=CHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{scccode,jdbcType=CHAR}, #{storeMaterial,jdbcType=CHAR}, 
      #{ftk,jdbcType=DOUBLE}, #{sourceStorage,jdbcType=CHAR}, #{fueltype,jdbcType=CHAR}, 
      #{nh3Temf,jdbcType=DOUBLE}, #{nh3Temfunit,jdbcType=CHAR}, #{vocTemf,jdbcType=DOUBLE}, 
      #{vocTemfunit,jdbcType=CHAR}, #{nh3Pemf,jdbcType=DOUBLE}, #{nh3Pemfunit,jdbcType=CHAR}, 
      #{vocPemf,jdbcType=DOUBLE}, #{vocPemfunit,jdbcType=CHAR}, #{nh3Emission,jdbcType=DOUBLE}, 
      #{nh3Emiunit,jdbcType=CHAR}, #{vocEmission,jdbcType=DOUBLE}, #{vocEmiunit,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.STransport">
    insert into s_transport
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="countyid != null">
        countyId,
      </if>
      <if test="oilname != null">
        oilname,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="scccode != null">
        scccode,
      </if>
      <if test="storeMaterial != null">
        Store_material,
      </if>
      <if test="ftk != null">
        ftk,
      </if>
      <if test="sourceStorage != null">
        Source_storage,
      </if>
      <if test="fueltype != null">
        fueltype,
      </if>
      <if test="nh3Temf != null">
        nh3_temf,
      </if>
      <if test="nh3Temfunit != null">
        nh3_temfunit,
      </if>
      <if test="vocTemf != null">
        voc_temf,
      </if>
      <if test="vocTemfunit != null">
        voc_temfunit,
      </if>
      <if test="nh3Pemf != null">
        nh3_pemf,
      </if>
      <if test="nh3Pemfunit != null">
        nh3_pemfunit,
      </if>
      <if test="vocPemf != null">
        voc_pemf,
      </if>
      <if test="vocPemfunit != null">
        voc_pemfunit,
      </if>
      <if test="nh3Emission != null">
        nh3_emission,
      </if>
      <if test="nh3Emiunit != null">
        nh3_emiunit,
      </if>
      <if test="vocEmission != null">
        voc_emission,
      </if>
      <if test="vocEmiunit != null">
        voc_emiunit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="countyid != null">
        #{countyid,jdbcType=CHAR},
      </if>
      <if test="oilname != null">
        #{oilname,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="scccode != null">
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="storeMaterial != null">
        #{storeMaterial,jdbcType=CHAR},
      </if>
      <if test="ftk != null">
        #{ftk,jdbcType=DOUBLE},
      </if>
      <if test="sourceStorage != null">
        #{sourceStorage,jdbcType=CHAR},
      </if>
      <if test="fueltype != null">
        #{fueltype,jdbcType=CHAR},
      </if>
      <if test="nh3Temf != null">
        #{nh3Temf,jdbcType=DOUBLE},
      </if>
      <if test="nh3Temfunit != null">
        #{nh3Temfunit,jdbcType=CHAR},
      </if>
      <if test="vocTemf != null">
        #{vocTemf,jdbcType=DOUBLE},
      </if>
      <if test="vocTemfunit != null">
        #{vocTemfunit,jdbcType=CHAR},
      </if>
      <if test="nh3Pemf != null">
        #{nh3Pemf,jdbcType=DOUBLE},
      </if>
      <if test="nh3Pemfunit != null">
        #{nh3Pemfunit,jdbcType=CHAR},
      </if>
      <if test="vocPemf != null">
        #{vocPemf,jdbcType=DOUBLE},
      </if>
      <if test="vocPemfunit != null">
        #{vocPemfunit,jdbcType=CHAR},
      </if>
      <if test="nh3Emission != null">
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emiunit != null">
        #{nh3Emiunit,jdbcType=CHAR},
      </if>
      <if test="vocEmission != null">
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmiunit != null">
        #{vocEmiunit,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.STransportExample" resultType="java.lang.Long">
    select count(*) from s_transport
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_transport
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=CHAR},
      </if>
      <if test="record.countyid != null">
        countyId = #{record.countyid,jdbcType=CHAR},
      </if>
      <if test="record.oilname != null">
        oilname = #{record.oilname,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=CHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.scccode != null">
        scccode = #{record.scccode,jdbcType=CHAR},
      </if>
      <if test="record.storeMaterial != null">
        Store_material = #{record.storeMaterial,jdbcType=CHAR},
      </if>
      <if test="record.ftk != null">
        ftk = #{record.ftk,jdbcType=DOUBLE},
      </if>
      <if test="record.sourceStorage != null">
        Source_storage = #{record.sourceStorage,jdbcType=CHAR},
      </if>
      <if test="record.fueltype != null">
        fueltype = #{record.fueltype,jdbcType=CHAR},
      </if>
      <if test="record.nh3Temf != null">
        nh3_temf = #{record.nh3Temf,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3Temfunit != null">
        nh3_temfunit = #{record.nh3Temfunit,jdbcType=CHAR},
      </if>
      <if test="record.vocTemf != null">
        voc_temf = #{record.vocTemf,jdbcType=DOUBLE},
      </if>
      <if test="record.vocTemfunit != null">
        voc_temfunit = #{record.vocTemfunit,jdbcType=CHAR},
      </if>
      <if test="record.nh3Pemf != null">
        nh3_pemf = #{record.nh3Pemf,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3Pemfunit != null">
        nh3_pemfunit = #{record.nh3Pemfunit,jdbcType=CHAR},
      </if>
      <if test="record.vocPemf != null">
        voc_pemf = #{record.vocPemf,jdbcType=DOUBLE},
      </if>
      <if test="record.vocPemfunit != null">
        voc_pemfunit = #{record.vocPemfunit,jdbcType=CHAR},
      </if>
      <if test="record.nh3Emission != null">
        nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3Emiunit != null">
        nh3_emiunit = #{record.nh3Emiunit,jdbcType=CHAR},
      </if>
      <if test="record.vocEmission != null">
        voc_emission = #{record.vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="record.vocEmiunit != null">
        voc_emiunit = #{record.vocEmiunit,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_transport
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=CHAR},
      countyId = #{record.countyid,jdbcType=CHAR},
      oilname = #{record.oilname,jdbcType=CHAR},
      address = #{record.address,jdbcType=CHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      scccode = #{record.scccode,jdbcType=CHAR},
      Store_material = #{record.storeMaterial,jdbcType=CHAR},
      ftk = #{record.ftk,jdbcType=DOUBLE},
      Source_storage = #{record.sourceStorage,jdbcType=CHAR},
      fueltype = #{record.fueltype,jdbcType=CHAR},
      nh3_temf = #{record.nh3Temf,jdbcType=DOUBLE},
      nh3_temfunit = #{record.nh3Temfunit,jdbcType=CHAR},
      voc_temf = #{record.vocTemf,jdbcType=DOUBLE},
      voc_temfunit = #{record.vocTemfunit,jdbcType=CHAR},
      nh3_pemf = #{record.nh3Pemf,jdbcType=DOUBLE},
      nh3_pemfunit = #{record.nh3Pemfunit,jdbcType=CHAR},
      voc_pemf = #{record.vocPemf,jdbcType=DOUBLE},
      voc_pemfunit = #{record.vocPemfunit,jdbcType=CHAR},
      nh3_emission = #{record.nh3Emission,jdbcType=DOUBLE},
      nh3_emiunit = #{record.nh3Emiunit,jdbcType=CHAR},
      voc_emission = #{record.vocEmission,jdbcType=DOUBLE},
      voc_emiunit = #{record.vocEmiunit,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.STransport">
    update s_transport
    <set>
      <if test="year != null">
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="countyid != null">
        countyId = #{countyid,jdbcType=CHAR},
      </if>
      <if test="oilname != null">
        oilname = #{oilname,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="scccode != null">
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="storeMaterial != null">
        Store_material = #{storeMaterial,jdbcType=CHAR},
      </if>
      <if test="ftk != null">
        ftk = #{ftk,jdbcType=DOUBLE},
      </if>
      <if test="sourceStorage != null">
        Source_storage = #{sourceStorage,jdbcType=CHAR},
      </if>
      <if test="fueltype != null">
        fueltype = #{fueltype,jdbcType=CHAR},
      </if>
      <if test="nh3Temf != null">
        nh3_temf = #{nh3Temf,jdbcType=DOUBLE},
      </if>
      <if test="nh3Temfunit != null">
        nh3_temfunit = #{nh3Temfunit,jdbcType=CHAR},
      </if>
      <if test="vocTemf != null">
        voc_temf = #{vocTemf,jdbcType=DOUBLE},
      </if>
      <if test="vocTemfunit != null">
        voc_temfunit = #{vocTemfunit,jdbcType=CHAR},
      </if>
      <if test="nh3Pemf != null">
        nh3_pemf = #{nh3Pemf,jdbcType=DOUBLE},
      </if>
      <if test="nh3Pemfunit != null">
        nh3_pemfunit = #{nh3Pemfunit,jdbcType=CHAR},
      </if>
      <if test="vocPemf != null">
        voc_pemf = #{vocPemf,jdbcType=DOUBLE},
      </if>
      <if test="vocPemfunit != null">
        voc_pemfunit = #{vocPemfunit,jdbcType=CHAR},
      </if>
      <if test="nh3Emission != null">
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emiunit != null">
        nh3_emiunit = #{nh3Emiunit,jdbcType=CHAR},
      </if>
      <if test="vocEmission != null">
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmiunit != null">
        voc_emiunit = #{vocEmiunit,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.STransport">
    update s_transport
    set year = #{year,jdbcType=CHAR},
      countyId = #{countyid,jdbcType=CHAR},
      oilname = #{oilname,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      scccode = #{scccode,jdbcType=CHAR},
      Store_material = #{storeMaterial,jdbcType=CHAR},
      ftk = #{ftk,jdbcType=DOUBLE},
      Source_storage = #{sourceStorage,jdbcType=CHAR},
      fueltype = #{fueltype,jdbcType=CHAR},
      nh3_temf = #{nh3Temf,jdbcType=DOUBLE},
      nh3_temfunit = #{nh3Temfunit,jdbcType=CHAR},
      voc_temf = #{vocTemf,jdbcType=DOUBLE},
      voc_temfunit = #{vocTemfunit,jdbcType=CHAR},
      nh3_pemf = #{nh3Pemf,jdbcType=DOUBLE},
      nh3_pemfunit = #{nh3Pemfunit,jdbcType=CHAR},
      voc_pemf = #{vocPemf,jdbcType=DOUBLE},
      voc_pemfunit = #{vocPemfunit,jdbcType=CHAR},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      nh3_emiunit = #{nh3Emiunit,jdbcType=CHAR},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      voc_emiunit = #{vocEmiunit,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>