<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.CarNumMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.CarNum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="cartype" jdbcType="VARCHAR" property="cartype" />
    <result column="usetype" jdbcType="VARCHAR" property="usetype" />
    <result column="fueltype" jdbcType="VARCHAR" property="fueltype" />
    <result column="guo0" jdbcType="INTEGER" property="guo0" />
    <result column="guo1" jdbcType="INTEGER" property="guo1" />
    <result column="guo2" jdbcType="INTEGER" property="guo2" />
    <result column="guo3" jdbcType="INTEGER" property="guo3" />
    <result column="guo4" jdbcType="INTEGER" property="guo4" />
    <result column="guo5" jdbcType="INTEGER" property="guo5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, cartype, usetype, fueltype, guo0, guo1, guo2, guo3, guo4, guo5
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.CarNumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from car_num
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car_num
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from car_num
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.CarNumExample">
    delete from car_num
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.CarNum">
    insert into car_num (id, year, cartype, 
      usetype, fueltype, guo0, 
      guo1, guo2, guo3, guo4, 
      guo5)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=VARCHAR}, #{cartype,jdbcType=VARCHAR}, 
      #{usetype,jdbcType=VARCHAR}, #{fueltype,jdbcType=VARCHAR}, #{guo0,jdbcType=INTEGER}, 
      #{guo1,jdbcType=INTEGER}, #{guo2,jdbcType=INTEGER}, #{guo3,jdbcType=INTEGER}, #{guo4,jdbcType=INTEGER}, 
      #{guo5,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.CarNum">
    insert into car_num
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="cartype != null">
        cartype,
      </if>
      <if test="usetype != null">
        usetype,
      </if>
      <if test="fueltype != null">
        fueltype,
      </if>
      <if test="guo0 != null">
        guo0,
      </if>
      <if test="guo1 != null">
        guo1,
      </if>
      <if test="guo2 != null">
        guo2,
      </if>
      <if test="guo3 != null">
        guo3,
      </if>
      <if test="guo4 != null">
        guo4,
      </if>
      <if test="guo5 != null">
        guo5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="cartype != null">
        #{cartype,jdbcType=VARCHAR},
      </if>
      <if test="usetype != null">
        #{usetype,jdbcType=VARCHAR},
      </if>
      <if test="fueltype != null">
        #{fueltype,jdbcType=VARCHAR},
      </if>
      <if test="guo0 != null">
        #{guo0,jdbcType=INTEGER},
      </if>
      <if test="guo1 != null">
        #{guo1,jdbcType=INTEGER},
      </if>
      <if test="guo2 != null">
        #{guo2,jdbcType=INTEGER},
      </if>
      <if test="guo3 != null">
        #{guo3,jdbcType=INTEGER},
      </if>
      <if test="guo4 != null">
        #{guo4,jdbcType=INTEGER},
      </if>
      <if test="guo5 != null">
        #{guo5,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.CarNumExample" resultType="java.lang.Long">
    select count(*) from car_num
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update car_num
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.cartype != null">
        cartype = #{record.cartype,jdbcType=VARCHAR},
      </if>
      <if test="record.usetype != null">
        usetype = #{record.usetype,jdbcType=VARCHAR},
      </if>
      <if test="record.fueltype != null">
        fueltype = #{record.fueltype,jdbcType=VARCHAR},
      </if>
      <if test="record.guo0 != null">
        guo0 = #{record.guo0,jdbcType=INTEGER},
      </if>
      <if test="record.guo1 != null">
        guo1 = #{record.guo1,jdbcType=INTEGER},
      </if>
      <if test="record.guo2 != null">
        guo2 = #{record.guo2,jdbcType=INTEGER},
      </if>
      <if test="record.guo3 != null">
        guo3 = #{record.guo3,jdbcType=INTEGER},
      </if>
      <if test="record.guo4 != null">
        guo4 = #{record.guo4,jdbcType=INTEGER},
      </if>
      <if test="record.guo5 != null">
        guo5 = #{record.guo5,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update car_num
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=VARCHAR},
      cartype = #{record.cartype,jdbcType=VARCHAR},
      usetype = #{record.usetype,jdbcType=VARCHAR},
      fueltype = #{record.fueltype,jdbcType=VARCHAR},
      guo0 = #{record.guo0,jdbcType=INTEGER},
      guo1 = #{record.guo1,jdbcType=INTEGER},
      guo2 = #{record.guo2,jdbcType=INTEGER},
      guo3 = #{record.guo3,jdbcType=INTEGER},
      guo4 = #{record.guo4,jdbcType=INTEGER},
      guo5 = #{record.guo5,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.CarNum">
    update car_num
    <set>
      <if test="year != null">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="cartype != null">
        cartype = #{cartype,jdbcType=VARCHAR},
      </if>
      <if test="usetype != null">
        usetype = #{usetype,jdbcType=VARCHAR},
      </if>
      <if test="fueltype != null">
        fueltype = #{fueltype,jdbcType=VARCHAR},
      </if>
      <if test="guo0 != null">
        guo0 = #{guo0,jdbcType=INTEGER},
      </if>
      <if test="guo1 != null">
        guo1 = #{guo1,jdbcType=INTEGER},
      </if>
      <if test="guo2 != null">
        guo2 = #{guo2,jdbcType=INTEGER},
      </if>
      <if test="guo3 != null">
        guo3 = #{guo3,jdbcType=INTEGER},
      </if>
      <if test="guo4 != null">
        guo4 = #{guo4,jdbcType=INTEGER},
      </if>
      <if test="guo5 != null">
        guo5 = #{guo5,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.CarNum">
    update car_num
    set year = #{year,jdbcType=VARCHAR},
      cartype = #{cartype,jdbcType=VARCHAR},
      usetype = #{usetype,jdbcType=VARCHAR},
      fueltype = #{fueltype,jdbcType=VARCHAR},
      guo0 = #{guo0,jdbcType=INTEGER},
      guo1 = #{guo1,jdbcType=INTEGER},
      guo2 = #{guo2,jdbcType=INTEGER},
      guo3 = #{guo3,jdbcType=INTEGER},
      guo4 = #{guo4,jdbcType=INTEGER},
      guo5 = #{guo5,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>