<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.KilnMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Kiln">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NK_NO" jdbcType="INTEGER" property="nkNo" />
    <result column="EXHUST_ID" jdbcType="INTEGER" property="exhustId" />
    <result column="FUNCTIO" jdbcType="CHAR" property="functio" />
    <result column="KILN_MODEL" jdbcType="CHAR" property="kilnModel" />
    <result column="MODEL" jdbcType="VARCHAR" property="model" />
    <result column="fueltype" jdbcType="CHAR" property="fueltype" />
    <result column="SCCCODE" jdbcType="CHAR" property="scccode" />
    <result column="KILN_FUEL_AUSAGE" jdbcType="DOUBLE" property="kilnFuelAusage" />
    <result column="KILN_FUEL_AUSAGEUNIT" jdbcType="VARCHAR" property="kilnFuelAusageunit" />
    <result column="NITREREMOVEID" jdbcType="INTEGER" property="nitreremoveid" />
    <result column="DUSTREMOVEID" jdbcType="INTEGER" property="dustremoveid" />
    <result column="SULPHURREMOVEID" jdbcType="INTEGER" property="sulphurremoveid" />
    <result column="COALASH" jdbcType="DOUBLE" property="coalash" />
    <result column="coal_volatilisation" jdbcType="DOUBLE" property="coalVolatilisation" />
    <result column="COALSULFUR" jdbcType="DOUBLE" property="coalsulfur" />
    <result column="PM10" jdbcType="DOUBLE" property="pm10" />
    <result column="PM25" jdbcType="DOUBLE" property="pm25" />
    <result column="CO" jdbcType="DOUBLE" property="co" />
    <result column="VOC" jdbcType="DOUBLE" property="voc" />
    <result column="PM" jdbcType="DOUBLE" property="pm" />
    <result column="SO2" jdbcType="DOUBLE" property="so2" />
    <result column="NOX" jdbcType="DOUBLE" property="nox" />
    <result column="NH3" jdbcType="DOUBLE" property="nh3" />
    <result column="OC" jdbcType="DOUBLE" property="oc" />
    <result column="BC" jdbcType="DOUBLE" property="bc" />
    <result column="feiqiti" jdbcType="DOUBLE" property="feiqiti" />
    <result column="so2out" jdbcType="DOUBLE" property="so2out" />
    <result column="pmout" jdbcType="DOUBLE" property="pmout" />
    <result column="noxout" jdbcType="DOUBLE" property="noxout" />
    <result column="Jan_useamount" jdbcType="DOUBLE" property="janUseamount" />
    <result column="Feb_useamount" jdbcType="DOUBLE" property="febUseamount" />
    <result column="Mar_useamount" jdbcType="DOUBLE" property="marUseamount" />
    <result column="Apr_useamount" jdbcType="DOUBLE" property="aprUseamount" />
    <result column="May_useamount" jdbcType="DOUBLE" property="mayUseamount" />
    <result column="June_useamount" jdbcType="DOUBLE" property="juneUseamount" />
    <result column="July_useamount" jdbcType="DOUBLE" property="julyUseamount" />
    <result column="aug_useamount" jdbcType="DOUBLE" property="augUseamount" />
    <result column="sept_useamount" jdbcType="DOUBLE" property="septUseamount" />
    <result column="oct_use_amount" jdbcType="DOUBLE" property="octUseAmount" />
    <result column="nov_useamount" jdbcType="DOUBLE" property="novUseamount" />
    <result column="dec_useamount" jdbcType="DOUBLE" property="decUseamount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NK_NO, EXHUST_ID, FUNCTIO, KILN_MODEL, MODEL, fueltype, SCCCODE, KILN_FUEL_AUSAGE, 
    KILN_FUEL_AUSAGEUNIT, NITREREMOVEID, DUSTREMOVEID, SULPHURREMOVEID, COALASH, coal_volatilisation, 
    COALSULFUR, PM10, PM25, CO, VOC, PM, SO2, NOX, NH3, OC, BC, feiqiti, so2out, pmout, 
    noxout, Jan_useamount, Feb_useamount, Mar_useamount, Apr_useamount, May_useamount, 
    June_useamount, July_useamount, aug_useamount, sept_useamount, oct_use_amount, nov_useamount, 
    dec_useamount
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.KilnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kiln
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kiln
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kiln
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.KilnExample">
    delete from kiln
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Kiln">
    insert into kiln (ID, NK_NO, EXHUST_ID, 
      FUNCTIO, KILN_MODEL, MODEL, 
      fueltype, SCCCODE, KILN_FUEL_AUSAGE, 
      KILN_FUEL_AUSAGEUNIT, NITREREMOVEID, DUSTREMOVEID, 
      SULPHURREMOVEID, COALASH, coal_volatilisation, 
      COALSULFUR, PM10, PM25, 
      CO, VOC, PM, SO2, 
      NOX, NH3, OC, BC, 
      feiqiti, so2out, pmout, 
      noxout, Jan_useamount, Feb_useamount, 
      Mar_useamount, Apr_useamount, May_useamount, 
      June_useamount, July_useamount, aug_useamount, 
      sept_useamount, oct_use_amount, nov_useamount, 
      dec_useamount)
    values (#{id,jdbcType=INTEGER}, #{nkNo,jdbcType=INTEGER}, #{exhustId,jdbcType=INTEGER}, 
      #{functio,jdbcType=CHAR}, #{kilnModel,jdbcType=CHAR}, #{model,jdbcType=VARCHAR}, 
      #{fueltype,jdbcType=CHAR}, #{scccode,jdbcType=CHAR}, #{kilnFuelAusage,jdbcType=DOUBLE}, 
      #{kilnFuelAusageunit,jdbcType=VARCHAR}, #{nitreremoveid,jdbcType=INTEGER}, #{dustremoveid,jdbcType=INTEGER}, 
      #{sulphurremoveid,jdbcType=INTEGER}, #{coalash,jdbcType=DOUBLE}, #{coalVolatilisation,jdbcType=DOUBLE}, 
      #{coalsulfur,jdbcType=DOUBLE}, #{pm10,jdbcType=DOUBLE}, #{pm25,jdbcType=DOUBLE}, 
      #{co,jdbcType=DOUBLE}, #{voc,jdbcType=DOUBLE}, #{pm,jdbcType=DOUBLE}, #{so2,jdbcType=DOUBLE}, 
      #{nox,jdbcType=DOUBLE}, #{nh3,jdbcType=DOUBLE}, #{oc,jdbcType=DOUBLE}, #{bc,jdbcType=DOUBLE}, 
      #{feiqiti,jdbcType=DOUBLE}, #{so2out,jdbcType=DOUBLE}, #{pmout,jdbcType=DOUBLE}, 
      #{noxout,jdbcType=DOUBLE}, #{janUseamount,jdbcType=DOUBLE}, #{febUseamount,jdbcType=DOUBLE}, 
      #{marUseamount,jdbcType=DOUBLE}, #{aprUseamount,jdbcType=DOUBLE}, #{mayUseamount,jdbcType=DOUBLE}, 
      #{juneUseamount,jdbcType=DOUBLE}, #{julyUseamount,jdbcType=DOUBLE}, #{augUseamount,jdbcType=DOUBLE}, 
      #{septUseamount,jdbcType=DOUBLE}, #{octUseAmount,jdbcType=DOUBLE}, #{novUseamount,jdbcType=DOUBLE}, 
      #{decUseamount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Kiln">
    insert into kiln
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="nkNo != null">
        NK_NO,
      </if>
      <if test="exhustId != null">
        EXHUST_ID,
      </if>
      <if test="functio != null">
        FUNCTIO,
      </if>
      <if test="kilnModel != null">
        KILN_MODEL,
      </if>
      <if test="model != null">
        MODEL,
      </if>
      <if test="fueltype != null">
        fueltype,
      </if>
      <if test="scccode != null">
        SCCCODE,
      </if>
      <if test="kilnFuelAusage != null">
        KILN_FUEL_AUSAGE,
      </if>
      <if test="kilnFuelAusageunit != null">
        KILN_FUEL_AUSAGEUNIT,
      </if>
      <if test="nitreremoveid != null">
        NITREREMOVEID,
      </if>
      <if test="dustremoveid != null">
        DUSTREMOVEID,
      </if>
      <if test="sulphurremoveid != null">
        SULPHURREMOVEID,
      </if>
      <if test="coalash != null">
        COALASH,
      </if>
      <if test="coalVolatilisation != null">
        coal_volatilisation,
      </if>
      <if test="coalsulfur != null">
        COALSULFUR,
      </if>
      <if test="pm10 != null">
        PM10,
      </if>
      <if test="pm25 != null">
        PM25,
      </if>
      <if test="co != null">
        CO,
      </if>
      <if test="voc != null">
        VOC,
      </if>
      <if test="pm != null">
        PM,
      </if>
      <if test="so2 != null">
        SO2,
      </if>
      <if test="nox != null">
        NOX,
      </if>
      <if test="nh3 != null">
        NH3,
      </if>
      <if test="oc != null">
        OC,
      </if>
      <if test="bc != null">
        BC,
      </if>
      <if test="feiqiti != null">
        feiqiti,
      </if>
      <if test="so2out != null">
        so2out,
      </if>
      <if test="pmout != null">
        pmout,
      </if>
      <if test="noxout != null">
        noxout,
      </if>
      <if test="janUseamount != null">
        Jan_useamount,
      </if>
      <if test="febUseamount != null">
        Feb_useamount,
      </if>
      <if test="marUseamount != null">
        Mar_useamount,
      </if>
      <if test="aprUseamount != null">
        Apr_useamount,
      </if>
      <if test="mayUseamount != null">
        May_useamount,
      </if>
      <if test="juneUseamount != null">
        June_useamount,
      </if>
      <if test="julyUseamount != null">
        July_useamount,
      </if>
      <if test="augUseamount != null">
        aug_useamount,
      </if>
      <if test="septUseamount != null">
        sept_useamount,
      </if>
      <if test="octUseAmount != null">
        oct_use_amount,
      </if>
      <if test="novUseamount != null">
        nov_useamount,
      </if>
      <if test="decUseamount != null">
        dec_useamount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nkNo != null">
        #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="exhustId != null">
        #{exhustId,jdbcType=INTEGER},
      </if>
      <if test="functio != null">
        #{functio,jdbcType=CHAR},
      </if>
      <if test="kilnModel != null">
        #{kilnModel,jdbcType=CHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="fueltype != null">
        #{fueltype,jdbcType=CHAR},
      </if>
      <if test="scccode != null">
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="kilnFuelAusage != null">
        #{kilnFuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="kilnFuelAusageunit != null">
        #{kilnFuelAusageunit,jdbcType=VARCHAR},
      </if>
      <if test="nitreremoveid != null">
        #{nitreremoveid,jdbcType=INTEGER},
      </if>
      <if test="dustremoveid != null">
        #{dustremoveid,jdbcType=INTEGER},
      </if>
      <if test="sulphurremoveid != null">
        #{sulphurremoveid,jdbcType=INTEGER},
      </if>
      <if test="coalash != null">
        #{coalash,jdbcType=DOUBLE},
      </if>
      <if test="coalVolatilisation != null">
        #{coalVolatilisation,jdbcType=DOUBLE},
      </if>
      <if test="coalsulfur != null">
        #{coalsulfur,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="co != null">
        #{co,jdbcType=DOUBLE},
      </if>
      <if test="voc != null">
        #{voc,jdbcType=DOUBLE},
      </if>
      <if test="pm != null">
        #{pm,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        #{nox,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        #{oc,jdbcType=DOUBLE},
      </if>
      <if test="bc != null">
        #{bc,jdbcType=DOUBLE},
      </if>
      <if test="feiqiti != null">
        #{feiqiti,jdbcType=DOUBLE},
      </if>
      <if test="so2out != null">
        #{so2out,jdbcType=DOUBLE},
      </if>
      <if test="pmout != null">
        #{pmout,jdbcType=DOUBLE},
      </if>
      <if test="noxout != null">
        #{noxout,jdbcType=DOUBLE},
      </if>
      <if test="janUseamount != null">
        #{janUseamount,jdbcType=DOUBLE},
      </if>
      <if test="febUseamount != null">
        #{febUseamount,jdbcType=DOUBLE},
      </if>
      <if test="marUseamount != null">
        #{marUseamount,jdbcType=DOUBLE},
      </if>
      <if test="aprUseamount != null">
        #{aprUseamount,jdbcType=DOUBLE},
      </if>
      <if test="mayUseamount != null">
        #{mayUseamount,jdbcType=DOUBLE},
      </if>
      <if test="juneUseamount != null">
        #{juneUseamount,jdbcType=DOUBLE},
      </if>
      <if test="julyUseamount != null">
        #{julyUseamount,jdbcType=DOUBLE},
      </if>
      <if test="augUseamount != null">
        #{augUseamount,jdbcType=DOUBLE},
      </if>
      <if test="septUseamount != null">
        #{septUseamount,jdbcType=DOUBLE},
      </if>
      <if test="octUseAmount != null">
        #{octUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="novUseamount != null">
        #{novUseamount,jdbcType=DOUBLE},
      </if>
      <if test="decUseamount != null">
        #{decUseamount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.KilnExample" resultType="java.lang.Long">
    select count(*) from kiln
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kiln
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nkNo != null">
        NK_NO = #{record.nkNo,jdbcType=INTEGER},
      </if>
      <if test="record.exhustId != null">
        EXHUST_ID = #{record.exhustId,jdbcType=INTEGER},
      </if>
      <if test="record.functio != null">
        FUNCTIO = #{record.functio,jdbcType=CHAR},
      </if>
      <if test="record.kilnModel != null">
        KILN_MODEL = #{record.kilnModel,jdbcType=CHAR},
      </if>
      <if test="record.model != null">
        MODEL = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.fueltype != null">
        fueltype = #{record.fueltype,jdbcType=CHAR},
      </if>
      <if test="record.scccode != null">
        SCCCODE = #{record.scccode,jdbcType=CHAR},
      </if>
      <if test="record.kilnFuelAusage != null">
        KILN_FUEL_AUSAGE = #{record.kilnFuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="record.kilnFuelAusageunit != null">
        KILN_FUEL_AUSAGEUNIT = #{record.kilnFuelAusageunit,jdbcType=VARCHAR},
      </if>
      <if test="record.nitreremoveid != null">
        NITREREMOVEID = #{record.nitreremoveid,jdbcType=INTEGER},
      </if>
      <if test="record.dustremoveid != null">
        DUSTREMOVEID = #{record.dustremoveid,jdbcType=INTEGER},
      </if>
      <if test="record.sulphurremoveid != null">
        SULPHURREMOVEID = #{record.sulphurremoveid,jdbcType=INTEGER},
      </if>
      <if test="record.coalash != null">
        COALASH = #{record.coalash,jdbcType=DOUBLE},
      </if>
      <if test="record.coalVolatilisation != null">
        coal_volatilisation = #{record.coalVolatilisation,jdbcType=DOUBLE},
      </if>
      <if test="record.coalsulfur != null">
        COALSULFUR = #{record.coalsulfur,jdbcType=DOUBLE},
      </if>
      <if test="record.pm10 != null">
        PM10 = #{record.pm10,jdbcType=DOUBLE},
      </if>
      <if test="record.pm25 != null">
        PM25 = #{record.pm25,jdbcType=DOUBLE},
      </if>
      <if test="record.co != null">
        CO = #{record.co,jdbcType=DOUBLE},
      </if>
      <if test="record.voc != null">
        VOC = #{record.voc,jdbcType=DOUBLE},
      </if>
      <if test="record.pm != null">
        PM = #{record.pm,jdbcType=DOUBLE},
      </if>
      <if test="record.so2 != null">
        SO2 = #{record.so2,jdbcType=DOUBLE},
      </if>
      <if test="record.nox != null">
        NOX = #{record.nox,jdbcType=DOUBLE},
      </if>
      <if test="record.nh3 != null">
        NH3 = #{record.nh3,jdbcType=DOUBLE},
      </if>
      <if test="record.oc != null">
        OC = #{record.oc,jdbcType=DOUBLE},
      </if>
      <if test="record.bc != null">
        BC = #{record.bc,jdbcType=DOUBLE},
      </if>
      <if test="record.feiqiti != null">
        feiqiti = #{record.feiqiti,jdbcType=DOUBLE},
      </if>
      <if test="record.so2out != null">
        so2out = #{record.so2out,jdbcType=DOUBLE},
      </if>
      <if test="record.pmout != null">
        pmout = #{record.pmout,jdbcType=DOUBLE},
      </if>
      <if test="record.noxout != null">
        noxout = #{record.noxout,jdbcType=DOUBLE},
      </if>
      <if test="record.janUseamount != null">
        Jan_useamount = #{record.janUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.febUseamount != null">
        Feb_useamount = #{record.febUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.marUseamount != null">
        Mar_useamount = #{record.marUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.aprUseamount != null">
        Apr_useamount = #{record.aprUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.mayUseamount != null">
        May_useamount = #{record.mayUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.juneUseamount != null">
        June_useamount = #{record.juneUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.julyUseamount != null">
        July_useamount = #{record.julyUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.augUseamount != null">
        aug_useamount = #{record.augUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.septUseamount != null">
        sept_useamount = #{record.septUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.octUseAmount != null">
        oct_use_amount = #{record.octUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.novUseamount != null">
        nov_useamount = #{record.novUseamount,jdbcType=DOUBLE},
      </if>
      <if test="record.decUseamount != null">
        dec_useamount = #{record.decUseamount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kiln
    set ID = #{record.id,jdbcType=INTEGER},
      NK_NO = #{record.nkNo,jdbcType=INTEGER},
      EXHUST_ID = #{record.exhustId,jdbcType=INTEGER},
      FUNCTIO = #{record.functio,jdbcType=CHAR},
      KILN_MODEL = #{record.kilnModel,jdbcType=CHAR},
      MODEL = #{record.model,jdbcType=VARCHAR},
      fueltype = #{record.fueltype,jdbcType=CHAR},
      SCCCODE = #{record.scccode,jdbcType=CHAR},
      KILN_FUEL_AUSAGE = #{record.kilnFuelAusage,jdbcType=DOUBLE},
      KILN_FUEL_AUSAGEUNIT = #{record.kilnFuelAusageunit,jdbcType=VARCHAR},
      NITREREMOVEID = #{record.nitreremoveid,jdbcType=INTEGER},
      DUSTREMOVEID = #{record.dustremoveid,jdbcType=INTEGER},
      SULPHURREMOVEID = #{record.sulphurremoveid,jdbcType=INTEGER},
      COALASH = #{record.coalash,jdbcType=DOUBLE},
      coal_volatilisation = #{record.coalVolatilisation,jdbcType=DOUBLE},
      COALSULFUR = #{record.coalsulfur,jdbcType=DOUBLE},
      PM10 = #{record.pm10,jdbcType=DOUBLE},
      PM25 = #{record.pm25,jdbcType=DOUBLE},
      CO = #{record.co,jdbcType=DOUBLE},
      VOC = #{record.voc,jdbcType=DOUBLE},
      PM = #{record.pm,jdbcType=DOUBLE},
      SO2 = #{record.so2,jdbcType=DOUBLE},
      NOX = #{record.nox,jdbcType=DOUBLE},
      NH3 = #{record.nh3,jdbcType=DOUBLE},
      OC = #{record.oc,jdbcType=DOUBLE},
      BC = #{record.bc,jdbcType=DOUBLE},
      feiqiti = #{record.feiqiti,jdbcType=DOUBLE},
      so2out = #{record.so2out,jdbcType=DOUBLE},
      pmout = #{record.pmout,jdbcType=DOUBLE},
      noxout = #{record.noxout,jdbcType=DOUBLE},
      Jan_useamount = #{record.janUseamount,jdbcType=DOUBLE},
      Feb_useamount = #{record.febUseamount,jdbcType=DOUBLE},
      Mar_useamount = #{record.marUseamount,jdbcType=DOUBLE},
      Apr_useamount = #{record.aprUseamount,jdbcType=DOUBLE},
      May_useamount = #{record.mayUseamount,jdbcType=DOUBLE},
      June_useamount = #{record.juneUseamount,jdbcType=DOUBLE},
      July_useamount = #{record.julyUseamount,jdbcType=DOUBLE},
      aug_useamount = #{record.augUseamount,jdbcType=DOUBLE},
      sept_useamount = #{record.septUseamount,jdbcType=DOUBLE},
      oct_use_amount = #{record.octUseAmount,jdbcType=DOUBLE},
      nov_useamount = #{record.novUseamount,jdbcType=DOUBLE},
      dec_useamount = #{record.decUseamount,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.Kiln">
    update kiln
    <set>
      <if test="nkNo != null">
        NK_NO = #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="exhustId != null">
        EXHUST_ID = #{exhustId,jdbcType=INTEGER},
      </if>
      <if test="functio != null">
        FUNCTIO = #{functio,jdbcType=CHAR},
      </if>
      <if test="kilnModel != null">
        KILN_MODEL = #{kilnModel,jdbcType=CHAR},
      </if>
      <if test="model != null">
        MODEL = #{model,jdbcType=VARCHAR},
      </if>
      <if test="fueltype != null">
        fueltype = #{fueltype,jdbcType=CHAR},
      </if>
      <if test="scccode != null">
        SCCCODE = #{scccode,jdbcType=CHAR},
      </if>
      <if test="kilnFuelAusage != null">
        KILN_FUEL_AUSAGE = #{kilnFuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="kilnFuelAusageunit != null">
        KILN_FUEL_AUSAGEUNIT = #{kilnFuelAusageunit,jdbcType=VARCHAR},
      </if>
      <if test="nitreremoveid != null">
        NITREREMOVEID = #{nitreremoveid,jdbcType=INTEGER},
      </if>
      <if test="dustremoveid != null">
        DUSTREMOVEID = #{dustremoveid,jdbcType=INTEGER},
      </if>
      <if test="sulphurremoveid != null">
        SULPHURREMOVEID = #{sulphurremoveid,jdbcType=INTEGER},
      </if>
      <if test="coalash != null">
        COALASH = #{coalash,jdbcType=DOUBLE},
      </if>
      <if test="coalVolatilisation != null">
        coal_volatilisation = #{coalVolatilisation,jdbcType=DOUBLE},
      </if>
      <if test="coalsulfur != null">
        COALSULFUR = #{coalsulfur,jdbcType=DOUBLE},
      </if>
      <if test="pm10 != null">
        PM10 = #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        PM25 = #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="co != null">
        CO = #{co,jdbcType=DOUBLE},
      </if>
      <if test="voc != null">
        VOC = #{voc,jdbcType=DOUBLE},
      </if>
      <if test="pm != null">
        PM = #{pm,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        SO2 = #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        NOX = #{nox,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        NH3 = #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        OC = #{oc,jdbcType=DOUBLE},
      </if>
      <if test="bc != null">
        BC = #{bc,jdbcType=DOUBLE},
      </if>
      <if test="feiqiti != null">
        feiqiti = #{feiqiti,jdbcType=DOUBLE},
      </if>
      <if test="so2out != null">
        so2out = #{so2out,jdbcType=DOUBLE},
      </if>
      <if test="pmout != null">
        pmout = #{pmout,jdbcType=DOUBLE},
      </if>
      <if test="noxout != null">
        noxout = #{noxout,jdbcType=DOUBLE},
      </if>
      <if test="janUseamount != null">
        Jan_useamount = #{janUseamount,jdbcType=DOUBLE},
      </if>
      <if test="febUseamount != null">
        Feb_useamount = #{febUseamount,jdbcType=DOUBLE},
      </if>
      <if test="marUseamount != null">
        Mar_useamount = #{marUseamount,jdbcType=DOUBLE},
      </if>
      <if test="aprUseamount != null">
        Apr_useamount = #{aprUseamount,jdbcType=DOUBLE},
      </if>
      <if test="mayUseamount != null">
        May_useamount = #{mayUseamount,jdbcType=DOUBLE},
      </if>
      <if test="juneUseamount != null">
        June_useamount = #{juneUseamount,jdbcType=DOUBLE},
      </if>
      <if test="julyUseamount != null">
        July_useamount = #{julyUseamount,jdbcType=DOUBLE},
      </if>
      <if test="augUseamount != null">
        aug_useamount = #{augUseamount,jdbcType=DOUBLE},
      </if>
      <if test="septUseamount != null">
        sept_useamount = #{septUseamount,jdbcType=DOUBLE},
      </if>
      <if test="octUseAmount != null">
        oct_use_amount = #{octUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="novUseamount != null">
        nov_useamount = #{novUseamount,jdbcType=DOUBLE},
      </if>
      <if test="decUseamount != null">
        dec_useamount = #{decUseamount,jdbcType=DOUBLE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.Kiln">
    update kiln
    set NK_NO = #{nkNo,jdbcType=INTEGER},
      EXHUST_ID = #{exhustId,jdbcType=INTEGER},
      FUNCTIO = #{functio,jdbcType=CHAR},
      KILN_MODEL = #{kilnModel,jdbcType=CHAR},
      MODEL = #{model,jdbcType=VARCHAR},
      fueltype = #{fueltype,jdbcType=CHAR},
      SCCCODE = #{scccode,jdbcType=CHAR},
      KILN_FUEL_AUSAGE = #{kilnFuelAusage,jdbcType=DOUBLE},
      KILN_FUEL_AUSAGEUNIT = #{kilnFuelAusageunit,jdbcType=VARCHAR},
      NITREREMOVEID = #{nitreremoveid,jdbcType=INTEGER},
      DUSTREMOVEID = #{dustremoveid,jdbcType=INTEGER},
      SULPHURREMOVEID = #{sulphurremoveid,jdbcType=INTEGER},
      COALASH = #{coalash,jdbcType=DOUBLE},
      coal_volatilisation = #{coalVolatilisation,jdbcType=DOUBLE},
      COALSULFUR = #{coalsulfur,jdbcType=DOUBLE},
      PM10 = #{pm10,jdbcType=DOUBLE},
      PM25 = #{pm25,jdbcType=DOUBLE},
      CO = #{co,jdbcType=DOUBLE},
      VOC = #{voc,jdbcType=DOUBLE},
      PM = #{pm,jdbcType=DOUBLE},
      SO2 = #{so2,jdbcType=DOUBLE},
      NOX = #{nox,jdbcType=DOUBLE},
      NH3 = #{nh3,jdbcType=DOUBLE},
      OC = #{oc,jdbcType=DOUBLE},
      BC = #{bc,jdbcType=DOUBLE},
      feiqiti = #{feiqiti,jdbcType=DOUBLE},
      so2out = #{so2out,jdbcType=DOUBLE},
      pmout = #{pmout,jdbcType=DOUBLE},
      noxout = #{noxout,jdbcType=DOUBLE},
      Jan_useamount = #{janUseamount,jdbcType=DOUBLE},
      Feb_useamount = #{febUseamount,jdbcType=DOUBLE},
      Mar_useamount = #{marUseamount,jdbcType=DOUBLE},
      Apr_useamount = #{aprUseamount,jdbcType=DOUBLE},
      May_useamount = #{mayUseamount,jdbcType=DOUBLE},
      June_useamount = #{juneUseamount,jdbcType=DOUBLE},
      July_useamount = #{julyUseamount,jdbcType=DOUBLE},
      aug_useamount = #{augUseamount,jdbcType=DOUBLE},
      sept_useamount = #{septUseamount,jdbcType=DOUBLE},
      oct_use_amount = #{octUseAmount,jdbcType=DOUBLE},
      nov_useamount = #{novUseamount,jdbcType=DOUBLE},
      dec_useamount = #{decUseamount,jdbcType=DOUBLE}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <!--自定义SQL：根据工厂ID查询窑炉（连接烟囱表）-->
  <select id="selectByFactoryIdWithJoin" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT ID, k.NK_NO, EXHUST_ID, FUNCTIO, KILN_MODEL, MODEL, fueltype, SCCCODE, KILN_FUEL_AUSAGE,
    KILN_FUEL_AUSAGEUNIT, NITREREMOVEID, DUSTREMOVEID, SULPHURREMOVEID, COALASH, coal_volatilisation,
    COALSULFUR, PM10, PM25, CO, VOC, PM, SO2, NOX, NH3, OC, BC, feiqiti, so2out, pmout,
    noxout, Jan_useamount, Feb_useamount, Mar_useamount, Apr_useamount, May_useamount,
    June_useamount, July_useamount, aug_useamount, sept_useamount, oct_use_amount, nov_useamount,
    dec_useamount
    from kiln k join exhaust e on k.EXHUST_ID = e.EXF_ID
    WHERE FACTORY_ID = #{factoryId,jdbcType=INTEGER}
    ORDER BY k.NK_NO
  </select>

</mapper>