<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.AuserMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.Auser">
    <result column="统一社会信用代码" jdbcType="VARCHAR" property="统一社会信用代码" />
    <result column="密码" jdbcType="VARCHAR" property="密码" />
    <result column="roleid" jdbcType="VARCHAR" property="roleid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    统一社会信用代码, 密码, roleid, status
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.AuserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.AuserExample">
    delete from auser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.Auser">
    insert into auser (统一社会信用代码, 密码, roleid, 
      status)
    values (#{统一社会信用代码,jdbcType=VARCHAR}, #{密码,jdbcType=VARCHAR}, #{roleid,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.Auser">
    insert into auser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="统一社会信用代码 != null">
        统一社会信用代码,
      </if>
      <if test="密码 != null">
        密码,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="统一社会信用代码 != null">
        #{统一社会信用代码,jdbcType=VARCHAR},
      </if>
      <if test="密码 != null">
        #{密码,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.AuserExample" resultType="java.lang.Long">
    select count(*) from auser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update auser
    <set>
      <if test="record.统一社会信用代码 != null">
        统一社会信用代码 = #{record.统一社会信用代码,jdbcType=VARCHAR},
      </if>
      <if test="record.密码 != null">
        密码 = #{record.密码,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null">
        roleid = #{record.roleid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update auser
    set 统一社会信用代码 = #{record.统一社会信用代码,jdbcType=VARCHAR},
      密码 = #{record.密码,jdbcType=VARCHAR},
      roleid = #{record.roleid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>