<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.NaturalNowMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.NaturalNow">
    <id column="nt_id" jdbcType="INTEGER" property="ntId" />
    <result column="nt_year" jdbcType="INTEGER" property="ntYear" />
    <result column="nt_day" jdbcType="INTEGER" property="ntDay" />
    <result column="nt_hour" jdbcType="INTEGER" property="ntHour" />
    <result column="nt_row" jdbcType="INTEGER" property="ntRow" />
    <result column="nt_col" jdbcType="INTEGER" property="ntCol" />
    <result column="nt_area" jdbcType="DOUBLE" property="ntArea" />
    <result column="nt_no" jdbcType="DOUBLE" property="ntNo" />
    <result column="nt_nh3" jdbcType="DOUBLE" property="ntNh3" />
    <result column="nt_co" jdbcType="DOUBLE" property="ntCo" />
    <result column="nt_isop" jdbcType="DOUBLE" property="ntIsop" />
    <result column="nt_ole" jdbcType="DOUBLE" property="ntOle" />
    <result column="nt_par" jdbcType="DOUBLE" property="ntPar" />
    <result column="nt_xyl" jdbcType="DOUBLE" property="ntXyl" />
    <result column="nt_form" jdbcType="DOUBLE" property="ntForm" />
    <result column="nt_ald2" jdbcType="DOUBLE" property="ntAld2" />
    <result column="nt_eth" jdbcType="DOUBLE" property="ntEth" />
    <result column="nt_meoh" jdbcType="DOUBLE" property="ntMeoh" />
    <result column="nt_etoh" jdbcType="DOUBLE" property="ntEtoh" />
    <result column="nt_nr" jdbcType="DOUBLE" property="ntNr" />
    <result column="nt_terp" jdbcType="DOUBLE" property="ntTerp" />
    <result column="nt_aldx" jdbcType="DOUBLE" property="ntAldx" />
    <result column="nt_etha" jdbcType="DOUBLE" property="ntEtha" />
    <result column="nt_iole" jdbcType="DOUBLE" property="ntIole" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nt_id, nt_year, nt_day, nt_hour, nt_row, nt_col, nt_area, nt_no, nt_nh3, nt_co, nt_isop, 
    nt_ole, nt_par, nt_xyl, nt_form, nt_ald2, nt_eth, nt_meoh, nt_etoh, nt_nr, nt_terp, 
    nt_aldx, nt_etha, nt_iole
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.NaturalNowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from natural_now
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from natural_now
    where nt_id = #{ntId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from natural_now
    where nt_id = #{ntId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.NaturalNowExample">
    delete from natural_now
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.NaturalNow">
    insert into natural_now (nt_id, nt_year, nt_day, 
      nt_hour, nt_row, nt_col, 
      nt_area, nt_no, nt_nh3, nt_co, 
      nt_isop, nt_ole, nt_par, 
      nt_xyl, nt_form, nt_ald2, 
      nt_eth, nt_meoh, nt_etoh, 
      nt_nr, nt_terp, nt_aldx, 
      nt_etha, nt_iole)
    values (#{ntId,jdbcType=INTEGER}, #{ntYear,jdbcType=INTEGER}, #{ntDay,jdbcType=INTEGER}, 
      #{ntHour,jdbcType=INTEGER}, #{ntRow,jdbcType=INTEGER}, #{ntCol,jdbcType=INTEGER}, 
      #{ntArea,jdbcType=DOUBLE}, #{ntNo,jdbcType=DOUBLE}, #{ntNh3,jdbcType=DOUBLE}, #{ntCo,jdbcType=DOUBLE}, 
      #{ntIsop,jdbcType=DOUBLE}, #{ntOle,jdbcType=DOUBLE}, #{ntPar,jdbcType=DOUBLE}, 
      #{ntXyl,jdbcType=DOUBLE}, #{ntForm,jdbcType=DOUBLE}, #{ntAld2,jdbcType=DOUBLE}, 
      #{ntEth,jdbcType=DOUBLE}, #{ntMeoh,jdbcType=DOUBLE}, #{ntEtoh,jdbcType=DOUBLE}, 
      #{ntNr,jdbcType=DOUBLE}, #{ntTerp,jdbcType=DOUBLE}, #{ntAldx,jdbcType=DOUBLE}, 
      #{ntEtha,jdbcType=DOUBLE}, #{ntIole,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.NaturalNow">
    insert into natural_now
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ntId != null">
        nt_id,
      </if>
      <if test="ntYear != null">
        nt_year,
      </if>
      <if test="ntDay != null">
        nt_day,
      </if>
      <if test="ntHour != null">
        nt_hour,
      </if>
      <if test="ntRow != null">
        nt_row,
      </if>
      <if test="ntCol != null">
        nt_col,
      </if>
      <if test="ntArea != null">
        nt_area,
      </if>
      <if test="ntNo != null">
        nt_no,
      </if>
      <if test="ntNh3 != null">
        nt_nh3,
      </if>
      <if test="ntCo != null">
        nt_co,
      </if>
      <if test="ntIsop != null">
        nt_isop,
      </if>
      <if test="ntOle != null">
        nt_ole,
      </if>
      <if test="ntPar != null">
        nt_par,
      </if>
      <if test="ntXyl != null">
        nt_xyl,
      </if>
      <if test="ntForm != null">
        nt_form,
      </if>
      <if test="ntAld2 != null">
        nt_ald2,
      </if>
      <if test="ntEth != null">
        nt_eth,
      </if>
      <if test="ntMeoh != null">
        nt_meoh,
      </if>
      <if test="ntEtoh != null">
        nt_etoh,
      </if>
      <if test="ntNr != null">
        nt_nr,
      </if>
      <if test="ntTerp != null">
        nt_terp,
      </if>
      <if test="ntAldx != null">
        nt_aldx,
      </if>
      <if test="ntEtha != null">
        nt_etha,
      </if>
      <if test="ntIole != null">
        nt_iole,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ntId != null">
        #{ntId,jdbcType=INTEGER},
      </if>
      <if test="ntYear != null">
        #{ntYear,jdbcType=INTEGER},
      </if>
      <if test="ntDay != null">
        #{ntDay,jdbcType=INTEGER},
      </if>
      <if test="ntHour != null">
        #{ntHour,jdbcType=INTEGER},
      </if>
      <if test="ntRow != null">
        #{ntRow,jdbcType=INTEGER},
      </if>
      <if test="ntCol != null">
        #{ntCol,jdbcType=INTEGER},
      </if>
      <if test="ntArea != null">
        #{ntArea,jdbcType=DOUBLE},
      </if>
      <if test="ntNo != null">
        #{ntNo,jdbcType=DOUBLE},
      </if>
      <if test="ntNh3 != null">
        #{ntNh3,jdbcType=DOUBLE},
      </if>
      <if test="ntCo != null">
        #{ntCo,jdbcType=DOUBLE},
      </if>
      <if test="ntIsop != null">
        #{ntIsop,jdbcType=DOUBLE},
      </if>
      <if test="ntOle != null">
        #{ntOle,jdbcType=DOUBLE},
      </if>
      <if test="ntPar != null">
        #{ntPar,jdbcType=DOUBLE},
      </if>
      <if test="ntXyl != null">
        #{ntXyl,jdbcType=DOUBLE},
      </if>
      <if test="ntForm != null">
        #{ntForm,jdbcType=DOUBLE},
      </if>
      <if test="ntAld2 != null">
        #{ntAld2,jdbcType=DOUBLE},
      </if>
      <if test="ntEth != null">
        #{ntEth,jdbcType=DOUBLE},
      </if>
      <if test="ntMeoh != null">
        #{ntMeoh,jdbcType=DOUBLE},
      </if>
      <if test="ntEtoh != null">
        #{ntEtoh,jdbcType=DOUBLE},
      </if>
      <if test="ntNr != null">
        #{ntNr,jdbcType=DOUBLE},
      </if>
      <if test="ntTerp != null">
        #{ntTerp,jdbcType=DOUBLE},
      </if>
      <if test="ntAldx != null">
        #{ntAldx,jdbcType=DOUBLE},
      </if>
      <if test="ntEtha != null">
        #{ntEtha,jdbcType=DOUBLE},
      </if>
      <if test="ntIole != null">
        #{ntIole,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.NaturalNowExample" resultType="java.lang.Long">
    select count(*) from natural_now
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update natural_now
    <set>
      <if test="record.ntId != null">
        nt_id = #{record.ntId,jdbcType=INTEGER},
      </if>
      <if test="record.ntYear != null">
        nt_year = #{record.ntYear,jdbcType=INTEGER},
      </if>
      <if test="record.ntDay != null">
        nt_day = #{record.ntDay,jdbcType=INTEGER},
      </if>
      <if test="record.ntHour != null">
        nt_hour = #{record.ntHour,jdbcType=INTEGER},
      </if>
      <if test="record.ntRow != null">
        nt_row = #{record.ntRow,jdbcType=INTEGER},
      </if>
      <if test="record.ntCol != null">
        nt_col = #{record.ntCol,jdbcType=INTEGER},
      </if>
      <if test="record.ntArea != null">
        nt_area = #{record.ntArea,jdbcType=DOUBLE},
      </if>
      <if test="record.ntNo != null">
        nt_no = #{record.ntNo,jdbcType=DOUBLE},
      </if>
      <if test="record.ntNh3 != null">
        nt_nh3 = #{record.ntNh3,jdbcType=DOUBLE},
      </if>
      <if test="record.ntCo != null">
        nt_co = #{record.ntCo,jdbcType=DOUBLE},
      </if>
      <if test="record.ntIsop != null">
        nt_isop = #{record.ntIsop,jdbcType=DOUBLE},
      </if>
      <if test="record.ntOle != null">
        nt_ole = #{record.ntOle,jdbcType=DOUBLE},
      </if>
      <if test="record.ntPar != null">
        nt_par = #{record.ntPar,jdbcType=DOUBLE},
      </if>
      <if test="record.ntXyl != null">
        nt_xyl = #{record.ntXyl,jdbcType=DOUBLE},
      </if>
      <if test="record.ntForm != null">
        nt_form = #{record.ntForm,jdbcType=DOUBLE},
      </if>
      <if test="record.ntAld2 != null">
        nt_ald2 = #{record.ntAld2,jdbcType=DOUBLE},
      </if>
      <if test="record.ntEth != null">
        nt_eth = #{record.ntEth,jdbcType=DOUBLE},
      </if>
      <if test="record.ntMeoh != null">
        nt_meoh = #{record.ntMeoh,jdbcType=DOUBLE},
      </if>
      <if test="record.ntEtoh != null">
        nt_etoh = #{record.ntEtoh,jdbcType=DOUBLE},
      </if>
      <if test="record.ntNr != null">
        nt_nr = #{record.ntNr,jdbcType=DOUBLE},
      </if>
      <if test="record.ntTerp != null">
        nt_terp = #{record.ntTerp,jdbcType=DOUBLE},
      </if>
      <if test="record.ntAldx != null">
        nt_aldx = #{record.ntAldx,jdbcType=DOUBLE},
      </if>
      <if test="record.ntEtha != null">
        nt_etha = #{record.ntEtha,jdbcType=DOUBLE},
      </if>
      <if test="record.ntIole != null">
        nt_iole = #{record.ntIole,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update natural_now
    set nt_id = #{record.ntId,jdbcType=INTEGER},
      nt_year = #{record.ntYear,jdbcType=INTEGER},
      nt_day = #{record.ntDay,jdbcType=INTEGER},
      nt_hour = #{record.ntHour,jdbcType=INTEGER},
      nt_row = #{record.ntRow,jdbcType=INTEGER},
      nt_col = #{record.ntCol,jdbcType=INTEGER},
      nt_area = #{record.ntArea,jdbcType=DOUBLE},
      nt_no = #{record.ntNo,jdbcType=DOUBLE},
      nt_nh3 = #{record.ntNh3,jdbcType=DOUBLE},
      nt_co = #{record.ntCo,jdbcType=DOUBLE},
      nt_isop = #{record.ntIsop,jdbcType=DOUBLE},
      nt_ole = #{record.ntOle,jdbcType=DOUBLE},
      nt_par = #{record.ntPar,jdbcType=DOUBLE},
      nt_xyl = #{record.ntXyl,jdbcType=DOUBLE},
      nt_form = #{record.ntForm,jdbcType=DOUBLE},
      nt_ald2 = #{record.ntAld2,jdbcType=DOUBLE},
      nt_eth = #{record.ntEth,jdbcType=DOUBLE},
      nt_meoh = #{record.ntMeoh,jdbcType=DOUBLE},
      nt_etoh = #{record.ntEtoh,jdbcType=DOUBLE},
      nt_nr = #{record.ntNr,jdbcType=DOUBLE},
      nt_terp = #{record.ntTerp,jdbcType=DOUBLE},
      nt_aldx = #{record.ntAldx,jdbcType=DOUBLE},
      nt_etha = #{record.ntEtha,jdbcType=DOUBLE},
      nt_iole = #{record.ntIole,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.NaturalNow">
    update natural_now
    <set>
      <if test="ntYear != null">
        nt_year = #{ntYear,jdbcType=INTEGER},
      </if>
      <if test="ntDay != null">
        nt_day = #{ntDay,jdbcType=INTEGER},
      </if>
      <if test="ntHour != null">
        nt_hour = #{ntHour,jdbcType=INTEGER},
      </if>
      <if test="ntRow != null">
        nt_row = #{ntRow,jdbcType=INTEGER},
      </if>
      <if test="ntCol != null">
        nt_col = #{ntCol,jdbcType=INTEGER},
      </if>
      <if test="ntArea != null">
        nt_area = #{ntArea,jdbcType=DOUBLE},
      </if>
      <if test="ntNo != null">
        nt_no = #{ntNo,jdbcType=DOUBLE},
      </if>
      <if test="ntNh3 != null">
        nt_nh3 = #{ntNh3,jdbcType=DOUBLE},
      </if>
      <if test="ntCo != null">
        nt_co = #{ntCo,jdbcType=DOUBLE},
      </if>
      <if test="ntIsop != null">
        nt_isop = #{ntIsop,jdbcType=DOUBLE},
      </if>
      <if test="ntOle != null">
        nt_ole = #{ntOle,jdbcType=DOUBLE},
      </if>
      <if test="ntPar != null">
        nt_par = #{ntPar,jdbcType=DOUBLE},
      </if>
      <if test="ntXyl != null">
        nt_xyl = #{ntXyl,jdbcType=DOUBLE},
      </if>
      <if test="ntForm != null">
        nt_form = #{ntForm,jdbcType=DOUBLE},
      </if>
      <if test="ntAld2 != null">
        nt_ald2 = #{ntAld2,jdbcType=DOUBLE},
      </if>
      <if test="ntEth != null">
        nt_eth = #{ntEth,jdbcType=DOUBLE},
      </if>
      <if test="ntMeoh != null">
        nt_meoh = #{ntMeoh,jdbcType=DOUBLE},
      </if>
      <if test="ntEtoh != null">
        nt_etoh = #{ntEtoh,jdbcType=DOUBLE},
      </if>
      <if test="ntNr != null">
        nt_nr = #{ntNr,jdbcType=DOUBLE},
      </if>
      <if test="ntTerp != null">
        nt_terp = #{ntTerp,jdbcType=DOUBLE},
      </if>
      <if test="ntAldx != null">
        nt_aldx = #{ntAldx,jdbcType=DOUBLE},
      </if>
      <if test="ntEtha != null">
        nt_etha = #{ntEtha,jdbcType=DOUBLE},
      </if>
      <if test="ntIole != null">
        nt_iole = #{ntIole,jdbcType=DOUBLE},
      </if>
    </set>
    where nt_id = #{ntId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.NaturalNow">
    update natural_now
    set nt_year = #{ntYear,jdbcType=INTEGER},
      nt_day = #{ntDay,jdbcType=INTEGER},
      nt_hour = #{ntHour,jdbcType=INTEGER},
      nt_row = #{ntRow,jdbcType=INTEGER},
      nt_col = #{ntCol,jdbcType=INTEGER},
      nt_area = #{ntArea,jdbcType=DOUBLE},
      nt_no = #{ntNo,jdbcType=DOUBLE},
      nt_nh3 = #{ntNh3,jdbcType=DOUBLE},
      nt_co = #{ntCo,jdbcType=DOUBLE},
      nt_isop = #{ntIsop,jdbcType=DOUBLE},
      nt_ole = #{ntOle,jdbcType=DOUBLE},
      nt_par = #{ntPar,jdbcType=DOUBLE},
      nt_xyl = #{ntXyl,jdbcType=DOUBLE},
      nt_form = #{ntForm,jdbcType=DOUBLE},
      nt_ald2 = #{ntAld2,jdbcType=DOUBLE},
      nt_eth = #{ntEth,jdbcType=DOUBLE},
      nt_meoh = #{ntMeoh,jdbcType=DOUBLE},
      nt_etoh = #{ntEtoh,jdbcType=DOUBLE},
      nt_nr = #{ntNr,jdbcType=DOUBLE},
      nt_terp = #{ntTerp,jdbcType=DOUBLE},
      nt_aldx = #{ntAldx,jdbcType=DOUBLE},
      nt_etha = #{ntEtha,jdbcType=DOUBLE},
      nt_iole = #{ntIole,jdbcType=DOUBLE}
    where nt_id = #{ntId,jdbcType=INTEGER}
  </update>
</mapper>