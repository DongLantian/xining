<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankai.xining.repository.ActivityLevelMapper">
  <resultMap id="BaseResultMap" type="com.nankai.xining.bean.ActivityLevel">
    <id column="ACTIVITYS_ID" jdbcType="CHAR" property="activitysId" />
    <result column="ACTIVITYS_QUANTITY" jdbcType="INTEGER" property="activitysQuantity" />
    <result column="LEVEL1_NAME" jdbcType="CHAR" property="level1Name" />
    <result column="LEVEL2_NAME" jdbcType="CHAR" property="level2Name" />
    <result column="LEVEL3_NAME" jdbcType="CHAR" property="level3Name" />
    <result column="LEVEL4_NAME" jdbcType="CHAR" property="level4Name" />
    <result column="LEVEL5_NAME" jdbcType="CHAR" property="level5Name" />
    <result column="LEVEL6_NAME" jdbcType="CHAR" property="level6Name" />
    <result column="LEVEL7_NAME" jdbcType="CHAR" property="level7Name" />
    <result column="LEVEL8_NAME" jdbcType="CHAR" property="level8Name" />
    <result column="LEVEL9_NAME" jdbcType="CHAR" property="level9Name" />
    <result column="LEVEL10_NAME" jdbcType="CHAR" property="level10Name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ACTIVITYS_ID, ACTIVITYS_QUANTITY, LEVEL1_NAME, LEVEL2_NAME, LEVEL3_NAME, LEVEL4_NAME, 
    LEVEL5_NAME, LEVEL6_NAME, LEVEL7_NAME, LEVEL8_NAME, LEVEL9_NAME, LEVEL10_NAME
  </sql>
  <select id="selectByExample" parameterType="com.nankai.xining.bean.ActivityLevelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity_level
    where ACTIVITYS_ID = #{activitysId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from activity_level
    where ACTIVITYS_ID = #{activitysId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nankai.xining.bean.ActivityLevelExample">
    delete from activity_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nankai.xining.bean.ActivityLevel">
    insert into activity_level (ACTIVITYS_ID, ACTIVITYS_QUANTITY, LEVEL1_NAME, 
      LEVEL2_NAME, LEVEL3_NAME, LEVEL4_NAME, 
      LEVEL5_NAME, LEVEL6_NAME, LEVEL7_NAME, 
      LEVEL8_NAME, LEVEL9_NAME, LEVEL10_NAME
      )
    values (#{activitysId,jdbcType=CHAR}, #{activitysQuantity,jdbcType=INTEGER}, #{level1Name,jdbcType=CHAR}, 
      #{level2Name,jdbcType=CHAR}, #{level3Name,jdbcType=CHAR}, #{level4Name,jdbcType=CHAR}, 
      #{level5Name,jdbcType=CHAR}, #{level6Name,jdbcType=CHAR}, #{level7Name,jdbcType=CHAR}, 
      #{level8Name,jdbcType=CHAR}, #{level9Name,jdbcType=CHAR}, #{level10Name,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nankai.xining.bean.ActivityLevel">
    insert into activity_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activitysId != null">
        ACTIVITYS_ID,
      </if>
      <if test="activitysQuantity != null">
        ACTIVITYS_QUANTITY,
      </if>
      <if test="level1Name != null">
        LEVEL1_NAME,
      </if>
      <if test="level2Name != null">
        LEVEL2_NAME,
      </if>
      <if test="level3Name != null">
        LEVEL3_NAME,
      </if>
      <if test="level4Name != null">
        LEVEL4_NAME,
      </if>
      <if test="level5Name != null">
        LEVEL5_NAME,
      </if>
      <if test="level6Name != null">
        LEVEL6_NAME,
      </if>
      <if test="level7Name != null">
        LEVEL7_NAME,
      </if>
      <if test="level8Name != null">
        LEVEL8_NAME,
      </if>
      <if test="level9Name != null">
        LEVEL9_NAME,
      </if>
      <if test="level10Name != null">
        LEVEL10_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activitysId != null">
        #{activitysId,jdbcType=CHAR},
      </if>
      <if test="activitysQuantity != null">
        #{activitysQuantity,jdbcType=INTEGER},
      </if>
      <if test="level1Name != null">
        #{level1Name,jdbcType=CHAR},
      </if>
      <if test="level2Name != null">
        #{level2Name,jdbcType=CHAR},
      </if>
      <if test="level3Name != null">
        #{level3Name,jdbcType=CHAR},
      </if>
      <if test="level4Name != null">
        #{level4Name,jdbcType=CHAR},
      </if>
      <if test="level5Name != null">
        #{level5Name,jdbcType=CHAR},
      </if>
      <if test="level6Name != null">
        #{level6Name,jdbcType=CHAR},
      </if>
      <if test="level7Name != null">
        #{level7Name,jdbcType=CHAR},
      </if>
      <if test="level8Name != null">
        #{level8Name,jdbcType=CHAR},
      </if>
      <if test="level9Name != null">
        #{level9Name,jdbcType=CHAR},
      </if>
      <if test="level10Name != null">
        #{level10Name,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nankai.xining.bean.ActivityLevelExample" resultType="java.lang.Long">
    select count(*) from activity_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_level
    <set>
      <if test="record.activitysId != null">
        ACTIVITYS_ID = #{record.activitysId,jdbcType=CHAR},
      </if>
      <if test="record.activitysQuantity != null">
        ACTIVITYS_QUANTITY = #{record.activitysQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.level1Name != null">
        LEVEL1_NAME = #{record.level1Name,jdbcType=CHAR},
      </if>
      <if test="record.level2Name != null">
        LEVEL2_NAME = #{record.level2Name,jdbcType=CHAR},
      </if>
      <if test="record.level3Name != null">
        LEVEL3_NAME = #{record.level3Name,jdbcType=CHAR},
      </if>
      <if test="record.level4Name != null">
        LEVEL4_NAME = #{record.level4Name,jdbcType=CHAR},
      </if>
      <if test="record.level5Name != null">
        LEVEL5_NAME = #{record.level5Name,jdbcType=CHAR},
      </if>
      <if test="record.level6Name != null">
        LEVEL6_NAME = #{record.level6Name,jdbcType=CHAR},
      </if>
      <if test="record.level7Name != null">
        LEVEL7_NAME = #{record.level7Name,jdbcType=CHAR},
      </if>
      <if test="record.level8Name != null">
        LEVEL8_NAME = #{record.level8Name,jdbcType=CHAR},
      </if>
      <if test="record.level9Name != null">
        LEVEL9_NAME = #{record.level9Name,jdbcType=CHAR},
      </if>
      <if test="record.level10Name != null">
        LEVEL10_NAME = #{record.level10Name,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_level
    set ACTIVITYS_ID = #{record.activitysId,jdbcType=CHAR},
      ACTIVITYS_QUANTITY = #{record.activitysQuantity,jdbcType=INTEGER},
      LEVEL1_NAME = #{record.level1Name,jdbcType=CHAR},
      LEVEL2_NAME = #{record.level2Name,jdbcType=CHAR},
      LEVEL3_NAME = #{record.level3Name,jdbcType=CHAR},
      LEVEL4_NAME = #{record.level4Name,jdbcType=CHAR},
      LEVEL5_NAME = #{record.level5Name,jdbcType=CHAR},
      LEVEL6_NAME = #{record.level6Name,jdbcType=CHAR},
      LEVEL7_NAME = #{record.level7Name,jdbcType=CHAR},
      LEVEL8_NAME = #{record.level8Name,jdbcType=CHAR},
      LEVEL9_NAME = #{record.level9Name,jdbcType=CHAR},
      LEVEL10_NAME = #{record.level10Name,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nankai.xining.bean.ActivityLevel">
    update activity_level
    <set>
      <if test="activitysQuantity != null">
        ACTIVITYS_QUANTITY = #{activitysQuantity,jdbcType=INTEGER},
      </if>
      <if test="level1Name != null">
        LEVEL1_NAME = #{level1Name,jdbcType=CHAR},
      </if>
      <if test="level2Name != null">
        LEVEL2_NAME = #{level2Name,jdbcType=CHAR},
      </if>
      <if test="level3Name != null">
        LEVEL3_NAME = #{level3Name,jdbcType=CHAR},
      </if>
      <if test="level4Name != null">
        LEVEL4_NAME = #{level4Name,jdbcType=CHAR},
      </if>
      <if test="level5Name != null">
        LEVEL5_NAME = #{level5Name,jdbcType=CHAR},
      </if>
      <if test="level6Name != null">
        LEVEL6_NAME = #{level6Name,jdbcType=CHAR},
      </if>
      <if test="level7Name != null">
        LEVEL7_NAME = #{level7Name,jdbcType=CHAR},
      </if>
      <if test="level8Name != null">
        LEVEL8_NAME = #{level8Name,jdbcType=CHAR},
      </if>
      <if test="level9Name != null">
        LEVEL9_NAME = #{level9Name,jdbcType=CHAR},
      </if>
      <if test="level10Name != null">
        LEVEL10_NAME = #{level10Name,jdbcType=CHAR},
      </if>
    </set>
    where ACTIVITYS_ID = #{activitysId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nankai.xining.bean.ActivityLevel">
    update activity_level
    set ACTIVITYS_QUANTITY = #{activitysQuantity,jdbcType=INTEGER},
      LEVEL1_NAME = #{level1Name,jdbcType=CHAR},
      LEVEL2_NAME = #{level2Name,jdbcType=CHAR},
      LEVEL3_NAME = #{level3Name,jdbcType=CHAR},
      LEVEL4_NAME = #{level4Name,jdbcType=CHAR},
      LEVEL5_NAME = #{level5Name,jdbcType=CHAR},
      LEVEL6_NAME = #{level6Name,jdbcType=CHAR},
      LEVEL7_NAME = #{level7Name,jdbcType=CHAR},
      LEVEL8_NAME = #{level8Name,jdbcType=CHAR},
      LEVEL9_NAME = #{level9Name,jdbcType=CHAR},
      LEVEL10_NAME = #{level10Name,jdbcType=CHAR}
    where ACTIVITYS_ID = #{activitysId,jdbcType=CHAR}
  </update>
</mapper>